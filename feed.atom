<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>urn:2023-09-26T00:20:33.631Z</id>
    <title>osmos::feed</title>
    <updated>2023-09-26T00:20:33.631Z</updated>
    <generator>osmosfeed 1.15.1</generator>
    <link rel="alternate" href="index.html"/>
    <entry>
        <title type="html"><![CDATA[Toggling Case with vim - #vim]]></title>
        <id>http://til.hashrocket.com/posts/6elp17ne09-toggling-case-with-vim</id>
        <link href="http://til.hashrocket.com/posts/6elp17ne09-toggling-case-with-vim"/>
        <updated>2023-09-25T20:53:19.000Z</updated>
        <summary type="html"><![CDATA[~ in Vim toggles the case of the character under the cursor and then moves the cursor to the next character.]]></summary>
        <author>
            <name>jackrosa</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to debug in Elixir - #elixir]]></title>
        <id>http://til.hashrocket.com/posts/jumo8prb3h-how-to-debug-in-elixir</id>
        <link href="http://til.hashrocket.com/posts/jumo8prb3h-how-to-debug-in-elixir"/>
        <updated>2023-09-25T14:34:08.000Z</updated>
        <summary type="html"><![CDATA[dbg/2 macro. I was already using that nice macro to show the results on each step of a pipe execution on the logs, but I learned that if we use iex to start phoenix server then the dbg/2 calls will act like adding a breakpoints so we can pry on it. We need to start the server with:
iex -S mix phx.server
iex --dbg pry in order to swap the dbg implementation from the fancy IO output to the IEx.pry one.]]></summary>
        <author>
            <name>viniciusnegrisolo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Design System Ecosystem]]></title>
        <id>https://bradfrost.com/blog/post/the-design-system-ecosystem/</id>
        <link href="https://bradfrost.com/blog/post/the-design-system-ecosystem/"/>
        <updated>2023-09-21T18:39:52.000Z</updated>
        <summary type="html"><![CDATA[What does a mature, end-to-end design system look like in a big, complex organization? What are all the moving pieces, and how do they hang together as a well-considered architecture? What&#8217;s required and what&#8217;s optional? Hold onto your butts, because [&#8230;]]]></summary>
        <author>
            <name>Brad Frost</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Block network requests in browser dev tools - #testing]]></title>
        <id>http://til.hashrocket.com/posts/8tunzsr4tq-block-network-requests-in-browser-dev-tools</id>
        <link href="http://til.hashrocket.com/posts/8tunzsr4tq-block-network-requests-in-browser-dev-tools"/>
        <updated>2023-09-21T15:23:17.000Z</updated>
        <summary type="html"><![CDATA[Ever do some sort of testing where you needed to block a specific request from completing in the browser? 

Me too... 

In chromium dev tools (Chrome, Brave, etc..) you can right-click a request in the network tab. You'll then be presented with an option to block the specific request or block the domain.

Next time that request is made, it will not complete. 

Easy-peasy]]></summary>
        <author>
            <name>mattpolito</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Rust 1.72.0]]></title>
        <id>https://www.youtube.com/watch?v=5qLMubxngoY</id>
        <link href="https://www.youtube.com/watch?v=5qLMubxngoY"/>
        <updated>2023-09-21T13:28:09.000Z</updated>
        <author>
            <name>Let's Get Rusty</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Make A Strong Case For Accessibility â€“ Smart Interface Design Patterns]]></title>
        <id>https://bradfrost.com/blog/link/how-to-make-a-strong-case-for-accessibility-smart-interface-design-patterns/</id>
        <link href="https://bradfrost.com/blog/link/how-to-make-a-strong-case-for-accessibility-smart-interface-design-patterns/"/>
        <updated>2023-09-18T14:54:55.000Z</updated>
        <summary type="html"><![CDATA[Getting support for accessibility efforts isnâ€™t easy. There are many accessibility myths, wrong assumptions and expectations that make accessibility look like a complex, expensive and time-consuming project. Letâ€™s fix that! Below are some practical techniques that has been working well [&#8230;]]]></summary>
        <author>
            <name>Brad Frost</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[All Rust string types explained]]></title>
        <id>https://www.youtube.com/watch?v=CpvzeyzgQdw</id>
        <link href="https://www.youtube.com/watch?v=CpvzeyzgQdw"/>
        <updated>2023-09-17T15:50:03.000Z</updated>
        <author>
            <name>Let's Get Rusty</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Execute (n)vim Commands on Startup - #vim]]></title>
        <id>http://til.hashrocket.com/posts/olcvrf7mia-execute-nvim-commands-on-startup</id>
        <link href="http://til.hashrocket.com/posts/olcvrf7mia-execute-nvim-commands-on-startup"/>
        <updated>2023-09-15T18:42:46.000Z</updated>
        <summary type="html"><![CDATA[:Git to open vim-fugitive so I can easily navigate my modified and staged files. But that's 2 steps - 1 more than I want. 
nvim -c ":Git", where the -c is the command you want to execute on startup. For even fewer keystrokes you could create an alias!]]></summary>
        <author>
            <name>tonyyunker</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Design Systems with Brad Frost &#8211; The State of the Web &#8211; Google Chrome Developers]]></title>
        <id>https://bradfrost.com/blog/link/design-systems-with-brad-frost-the-state-of-the-web-google-chrome-developers/</id>
        <link href="https://bradfrost.com/blog/link/design-systems-with-brad-frost-the-state-of-the-web-google-chrome-developers/"/>
        <updated>2023-09-15T17:58:07.000Z</updated>
        <summary type="html"><![CDATA[YouTube&#8217;s recommendation algorithm led me to this interview I did about design systems with Google Chrome Developers: While it was published in Feb 2020 (ðŸ˜±), I think it still holds up pretty dang well!]]></summary>
        <author>
            <name>Brad Frost</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Cult of Done]]></title>
        <id>https://www.youtube.com/watch?v=bJQj1uKtnus</id>
        <link href="https://www.youtube.com/watch?v=bJQj1uKtnus"/>
        <updated>2023-09-15T09:27:37.000Z</updated>
        <author>
            <name>No Boilerplate</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using slice_after to split arrays by a value  - #ruby]]></title>
        <id>http://til.hashrocket.com/posts/rm9tvmzf9p-using-sliceafter-to-split-arrays-by-a-value-</id>
        <link href="http://til.hashrocket.com/posts/rm9tvmzf9p-using-sliceafter-to-split-arrays-by-a-value-"/>
        <updated>2023-09-14T17:25:52.000Z</updated>
        <summary type="html"><![CDATA[slice_after (there's also slice_before, which behaves the same way).
array = [
  {activity: "traveling", ticket: "123"},
  {activity: "working", ticket: "123"},
  {activity: "awaiting_assignment", ticket: ""},
  {activity: "traveling", ticket: "234"},
  {activity: "refueling", ticket: "234"},
  {activity: "traveling", ticket: "234"},
  {activity: "working", ticket: "234"},
  {activity: "awaiting_assignment", ticket: ""}
]

array.slice_after { |i| i.activity == "awaiting_assignment" }
# Returns:
[
  [
    {activity: "traveling", ticket: "123"},
    {activity: "working", ticket: "123"},
    {activity: "awaiting_assignment", ticket: ""}
  ],
  [
    {activity: "traveling", ticket: "234"},
    {activity: "refueling", ticket: "234"},
    {activity: "traveling", ticket: "234"},
    {activity: "working", ticket: "234"},
    {activity: "awaiting_assignment", ticket: ""}
  ]
]]]></summary>
        <author>
            <name>marylee</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Tails OS in 100 Seconds]]></title>
        <id>https://www.youtube.com/watch?v=mVKAyw0xqxw</id>
        <link href="https://www.youtube.com/watch?v=mVKAyw0xqxw"/>
        <updated>2023-09-14T12:30:23.000Z</updated>
        <author>
            <name>Fireship</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Check and generate your site's Favicons - #html-css]]></title>
        <id>http://til.hashrocket.com/posts/xf8cmtn0af-check-and-generate-your-sites-favicons</id>
        <link href="http://til.hashrocket.com/posts/xf8cmtn0af-check-and-generate-your-sites-favicons"/>
        <updated>2023-09-13T19:34:13.000Z</updated>
        <summary type="html"><![CDATA[https://realfavicongenerator.net/ can audit your website's favicon's to show which devices and browsers will display your favicon properly.   
 The site also helps with favicon generation and target resolutions.]]></summary>
        <author>
            <name>jackrosa</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Updating Postgres Timezone - #sql]]></title>
        <id>http://til.hashrocket.com/posts/nx9yqjyfnh-updating-postgres-timezone</id>
        <link href="http://til.hashrocket.com/posts/nx9yqjyfnh-updating-postgres-timezone"/>
        <updated>2023-09-13T14:56:16.000Z</updated>
        <summary type="html"><![CDATA[show timezone to see the current timezone on your postgres database:
my_db_test=# show timezone;
     TimeZone
------------------
 America/New_York
alter database my_db_test set timezone to 'utc';
psql session for the new timezone to apply.]]></summary>
        <author>
            <name>gabrielreis</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Close File Shortcut In VS Code - #workflow]]></title>
        <id>http://til.hashrocket.com/posts/nkxofw9dff-close-file-shortcut-in-vs-code</id>
        <link href="http://til.hashrocket.com/posts/nkxofw9dff-close-file-shortcut-in-vs-code"/>
        <updated>2023-09-11T18:47:40.000Z</updated>
        <summary type="html"><![CDATA[Cmd (âŒ˜) + w in VS Code to close the currently open file.]]></summary>
        <author>
            <name>jackrosa</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Bun is disrupting JavaScript land]]></title>
        <id>https://www.youtube.com/watch?v=dWqNgzZwVJQ</id>
        <link href="https://www.youtube.com/watch?v=dWqNgzZwVJQ"/>
        <updated>2023-09-08T19:12:14.000Z</updated>
        <author>
            <name>Fireship</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Big projects are ditching TypeScriptâ€¦ why?]]></title>
        <id>https://www.youtube.com/watch?v=5ChkQKUzDCs</id>
        <link href="https://www.youtube.com/watch?v=5ChkQKUzDCs"/>
        <updated>2023-09-07T17:47:46.000Z</updated>
        <author>
            <name>Fireship</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Educational Sensational Inspirational Foundational]]></title>
        <id>https://bradfrost.com/blog/link/educational-sensational-inspirational-foundational/</id>
        <link href="https://bradfrost.com/blog/link/educational-sensational-inspirational-foundational/"/>
        <updated>2023-09-06T00:14:56.000Z</updated>
        <summary type="html"><![CDATA[Absolutely honored to have atomic design included in this roundup of Educational Sensational Inspirational Foundational posts.]]></summary>
        <author>
            <name>Brad Frost</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[my browser, my paste]]></title>
        <id>https://www.youtube.com/watch?v=7bmsDg4BaKw</id>
        <link href="https://www.youtube.com/watch?v=7bmsDg4BaKw"/>
        <updated>2023-09-05T16:47:16.000Z</updated>
        <author>
            <name>Fireship</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[AI: The Next Chapter in Design &#124; Figma Blog]]></title>
        <id>https://bradfrost.com/blog/link/ai-the-next-chapter-in-design-figma-blog/</id>
        <link href="https://bradfrost.com/blog/link/ai-the-next-chapter-in-design-figma-blog/"/>
        <updated>2023-09-05T15:59:20.000Z</updated>
        <summary type="html"><![CDATA[It&#8217;s an honor to be referenced at Figma&#8217;s Config keynote and follow-up article AI: The Next Chapter in Design.Â  I like how Figma used the atomic design methodology to articulate where AI might prove to be most useful. Lower-level atoms [&#8230;]]]></summary>
        <author>
            <name>Brad Frost</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Never waste your midlife crisis &#8211; Austin Kleon]]></title>
        <id>https://bradfrost.com/blog/link/never-waste-your-midlife-crisis-austin-kleon/</id>
        <link href="https://bradfrost.com/blog/link/never-waste-your-midlife-crisis-austin-kleon/"/>
        <updated>2023-09-05T15:28:16.000Z</updated>
        <summary type="html"><![CDATA[You should never waste your midlife crisis. You can do great things with a midlife crisis. I love all of Austin&#8217;s great blogging and sharing, and this one stuck with me: never waste your midlife crisis. As a human being [&#8230;]]]></summary>
        <author>
            <name>Brad Frost</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[News is bad for you â€“ and giving up reading it will make you happier &#124; The Guardian]]></title>
        <id>https://bradfrost.com/blog/link/news-is-bad-for-you-and-giving-up-reading-it-will-make-you-happier-the-guardian/</id>
        <link href="https://bradfrost.com/blog/link/news-is-bad-for-you-and-giving-up-reading-it-will-make-you-happier-the-guardian/"/>
        <updated>2023-09-05T15:08:03.000Z</updated>
        <summary type="html"><![CDATA[News is bad for your health. It leads to fear and aggression, and hinders your creativity and ability to think deeply. The solution? Stop consuming it altogether News is bad for you â€“ and giving up reading it will make [&#8230;]]]></summary>
        <author>
            <name>Brad Frost</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Elixir Data Type Comparison - #elixir]]></title>
        <id>http://til.hashrocket.com/posts/jzqrofwjkx-elixir-data-type-comparison</id>
        <link href="http://til.hashrocket.com/posts/jzqrofwjkx-elixir-data-type-comparison"/>
        <updated>2023-08-31T01:08:49.000Z</updated>
        <summary type="html"><![CDATA[number < atom < reference < function < port < pid < tuple < map < list < bitstring
random_data = [["Hello World"], {:hello, :world}, 16, %{key: "value"}, :atom]
Enum.sort(random_data)
#=> [16, :atom, {:hello, :world}, %{key: "value"}, ["Hello World"]]
4 < :atom
#=> true]]></summary>
        <author>
            <name>jackrosa</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Be Happier Without Really Trying &#8211; Barking Up The Wrong Tree]]></title>
        <id>https://bradfrost.com/blog/link/how-to-be-happier-without-really-trying-barking-up-the-wrong-tree/</id>
        <link href="https://bradfrost.com/blog/link/how-to-be-happier-without-really-trying-barking-up-the-wrong-tree/"/>
        <updated>2023-08-28T21:27:00.000Z</updated>
        <summary type="html"><![CDATA[How to Be Happier Without Really Trying summarizes a lot of the tactics I take in my own life to be happier (errr, more tranquil). This post does a good job summarizing Epicurean philosophies Live For Pleasure: Not the frat [&#8230;]]]></summary>
        <author>
            <name>Brad Frost</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The ruthless forking of Terraform]]></title>
        <id>https://www.youtube.com/watch?v=HzBA6FIn_Bo</id>
        <link href="https://www.youtube.com/watch?v=HzBA6FIn_Bo"/>
        <updated>2023-08-28T18:32:30.000Z</updated>
        <author>
            <name>Fireship</name>
        </author>
    </entry>
</feed>