<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>urn:2022-11-24T00:26:00.858Z</id>
    <title>osmos::feed</title>
    <updated>2022-11-24T00:26:00.858Z</updated>
    <generator>osmosfeed 1.15.1</generator>
    <link rel="alternate" href="index.html"/>
    <entry>
        <title type="html"><![CDATA[JavaScript for the Haters]]></title>
        <id>https://www.youtube.com/watch?v=aXOChLn5ZdQ</id>
        <link href="https://www.youtube.com/watch?v=aXOChLn5ZdQ"/>
        <updated>2022-11-23T20:22:27.000Z</updated>
        <author>
            <name>Fireship</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Composite Primary Keys using Elixir Ecto - #elixir]]></title>
        <id>http://til.hashrocket.com/posts/lgagvwjnev-composite-primary-keys-using-elixir-ecto</id>
        <link href="http://til.hashrocket.com/posts/lgagvwjnev-composite-primary-keys-using-elixir-ecto"/>
        <updated>2022-11-23T17:51:07.000Z</updated>
        <summary type="html"><![CDATA[primary_key: true option for the Ecto.Schema.field/3 instead of dealing with the special module attr @primary_key. Check this out:
defmodule MyApp.OrderItem do
  use Ecto.Schema

  @primary_key false
  schema "order_items" do
    field :product_id, :integer, primary_key: true
    field :order_id, :integer, primary_key: true
    field :quantity, :integer
  end
end]]></summary>
        <author>
            <name>viniciusnegrisolo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Change Password of SSH key - #command-line]]></title>
        <id>http://til.hashrocket.com/posts/ihcswk7vhl-how-to-change-password-of-ssh-key</id>
        <link href="http://til.hashrocket.com/posts/ihcswk7vhl-how-to-change-password-of-ssh-key"/>
        <updated>2022-11-23T15:45:35.000Z</updated>
        <summary type="html"><![CDATA[ssh-keygen -p

From the man pages -
Requests changing the passphrase of a private key file instead of
creating a new private key.  The program will prompt for the file
containing the private key, for the old passphrase, and twice for
the new passphrase.
https://man.openbsd.org/ssh-keygen.1#p]]></summary>
        <author>
            <name>andrewvogel</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Wah Wah Watson with Herbie Hancock 1976 (live video) &#8211; Hang Up Your Hang Ups]]></title>
        <id>https://bradfrost.com/blog/link/wah-wah-watson-with-herbie-hancock-1976-live-video-hang-up-your-hang-ups/</id>
        <link href="https://bradfrost.com/blog/link/wah-wah-watson-with-herbie-hancock-1976-live-video-hang-up-your-hang-ups/"/>
        <updated>2022-11-22T15:59:40.000Z</updated>
        <summary type="html"><![CDATA[This is so badass. The control the band exhibits is absolutely incredible. It feels super organic, groovy, and even jammy, but it&#8217;s all totally locked in. When you feel like they&#8217;re just jamming over a groove, all of a sudden [&#8230;]]]></summary>
        <author>
            <name>Brad Frost</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[100+ JavaScript Concepts you Need to Know]]></title>
        <id>https://www.youtube.com/watch?v=lkIFF4maKMU</id>
        <link href="https://www.youtube.com/watch?v=lkIFF4maKMU"/>
        <updated>2022-11-22T15:04:57.000Z</updated>
        <author>
            <name>Fireship</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Renaming a Git Branch - #git]]></title>
        <id>http://til.hashrocket.com/posts/q3n1lwnfrz-renaming-a-git-branch</id>
        <link href="http://til.hashrocket.com/posts/q3n1lwnfrz-renaming-a-git-branch"/>
        <updated>2022-11-22T14:34:15.000Z</updated>
        <summary type="html"><![CDATA[git branch -m ‏‏‎<your-new-branch-name>

Git will create a reflog of the rename too.]]></summary>
        <author>
            <name>jackrosa</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[21 Nov 2022]]></title>
        <id>https://this-week-in-neovim.org/2022/Nov/21</id>
        <link href="https://this-week-in-neovim.org/2022/Nov/21"/>
        <updated>2022-11-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Neovim Core updates
Updates of Neovim itself, which are available on Neovim nightly.
Important: if you are a plugin author, you are strongly advised to follow the
#14090 breaking changes on master GitHub thread, as it contains
important breaking changes information.
#20956 vim.secure.read() and use it for 'exrc'
Add the vim.secure.read() function in Lua which prompts the user whether the given file is trusted or not. This
function is used to implement the 'exrc' feature. By explicitly asking the user whether or not a .nvimrc or
.exrc file is trusted (and only sourcing the file if so), the most trivial security issues with the 'exrc' options
are resolved and the function can be un-deprecated.
New plugins

      
    
    redostr.nvim
  

A new plugin providing an API to return the redo stri…]]></summary>
        <author>
            <name>Dimitri 'phaazon' Sabadie &lt;dimitri.sabadie@gmail.com&gt;</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Performant Mental Health]]></title>
        <id>https://bradfrost.com/blog/link/performant-mental-health/</id>
        <link href="https://bradfrost.com/blog/link/performant-mental-health/"/>
        <updated>2022-11-18T15:30:43.000Z</updated>
        <summary type="html"><![CDATA[I was talking to my friend Cameron Moll, and he discussed a series of articles about mental health that he, his wife, and a mental health nurse practitioner wrote. There&#8217;s some really fantastic information and advice in there, and I [&#8230;]]]></summary>
        <author>
            <name>Brad Frost</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A new operating system written in Rust]]></title>
        <id>https://www.youtube.com/watch?v=0O_VAEgJEcA</id>
        <link href="https://www.youtube.com/watch?v=0O_VAEgJEcA"/>
        <updated>2022-11-18T14:00:01.000Z</updated>
        <author>
            <name>Let's Get Rusty</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Layout &#038; Grid in Design Systems]]></title>
        <id>https://bradfrost.com/blog/post/layout-grid-in-design-systems/</id>
        <link href="https://bradfrost.com/blog/post/layout-grid-in-design-systems/"/>
        <updated>2022-11-17T17:07:49.000Z</updated>
        <summary type="html"><![CDATA[Simply saying the word &#8220;grid&#8221; conjures up strong and confusing feelings. Kinda like puberty! With so much history and so many different (and sometimes competing) paradigms, it&#8217;s no wonder conversations around layout and grid are so fraught, confusing, and contentious. [&#8230;]]]></summary>
        <author>
            <name>Brad Frost</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Destructuring Assignment in Javascript - #javascript]]></title>
        <id>http://til.hashrocket.com/posts/bmjzem5gvs-destructuring-assignment-in-javascript</id>
        <link href="http://til.hashrocket.com/posts/bmjzem5gvs-destructuring-assignment-in-javascript"/>
        <updated>2022-11-17T15:42:21.000Z</updated>
        <summary type="html"><![CDATA[// First we need an object to refer to
const pizza =  {
    crust: "thin", 
    topping: "pepperoni", 
    deliveryDriver: "Jack"
}

//Then we can use a destructuring assignment
const {crust} = pizza

console.log(crust)
// expected output: thin

Very handy
Read more here]]></summary>
        <author>
            <name>jackrosa</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Identity Primary Keys on Ecto - #elixir]]></title>
        <id>http://til.hashrocket.com/posts/gii7p8xmxr-identity-primary-keys-on-ecto</id>
        <link href="http://til.hashrocket.com/posts/gii7p8xmxr-identity-primary-keys-on-ecto"/>
        <updated>2022-11-16T19:12:02.000Z</updated>
        <summary type="html"><![CDATA[:identity to be used since 3.5 which is cool:
create table(:user, primary_key: false) do
  add :id, :identity, primary_key: true
  add :name, :string, null: false

  timestamps()
end

That generates this SQL:
CREATE TABLE public.users (
    id bigint NOT NULL,
    name character varying(255) NOT NULL,
    inserted_at timestamp(0) without time zone NOT NULL,
    updated_at timestamp(0) without time zone NOT NULL
);

ALTER TABLE public.users ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

The only issue is that there’s no option to change from BY DEFAULT to ALWAYS 😕]]></summary>
        <author>
            <name>viniciusnegrisolo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Find a function OID in Postgres - #sql]]></title>
        <id>http://til.hashrocket.com/posts/jwtkinrziy-find-a-function-oid-in-postgres</id>
        <link href="http://til.hashrocket.com/posts/jwtkinrziy-find-a-function-oid-in-postgres"/>
        <updated>2022-11-16T15:13:41.000Z</updated>
        <summary type="html"><![CDATA[pg_proc table:
select oid from pg_proc where proname ='my_function_name';

This is very useful if you need to find more info about a function but only know the function name.]]></summary>
        <author>
            <name>marylee</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Cut for time]]></title>
        <id>https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-8</id>
        <link href="https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-8"/>
        <updated>2022-11-15T19:30:08.000Z</updated>
        <summary type="html"><![CDATA[<p>This series has to end <em>somewhere</em>, so let's end it here!</p>
<p>However, here is a list of some things I'd like to come back to:</p>

                        <h2>
                            <a id="bundling-typescript" class="anchor" href="#bundling-typescript">
                                Bundling & TypeScript
                            </a>
                        </h2>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Async fn in trait, for real this time]]></title>
        <id>https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-7</id>
        <link href="https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-7"/>
        <updated>2022-11-15T19:30:07.000Z</updated>
        <summary type="html"><![CDATA[<h2>
                            <a id="async-trait-s-one-weird-type-ascription-trick" class="anchor" href="#async-trait-s-one-weird-type-ascription-trick">
                                <code>async_trait</code>'s one weird type ascription trick
                            </a>
                        </h2>
                        
<p>Now that I got <a href="part-6">the Log in with GitHub feature</a> working, let's explore
what this would've looked like with the <code>async_trait</code> crate.</p>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Implementing "Log in with GitHub"]]></title>
        <id>https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-6</id>
        <link href="https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-6"/>
        <updated>2022-11-15T19:30:06.000Z</updated>
        <summary type="html"><![CDATA[<p>Because I started accepting donations via <a href="/donate">GitHub Sponsors</a>, and
because donating at the &quot;Silver&quot; tier or above gives you advance access to
articles <em>and</em> your name in the credits, I need to interface with the GitHub
API the same way I do the Patreon API.</p>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Trying to use nix]]></title>
        <id>https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-5</id>
        <link href="https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-5"/>
        <updated>2022-11-15T19:30:05.000Z</updated>
        <summary type="html"><![CDATA[<p>Now that my website is <a href="part-4">deployed as a container image</a>, I wanted to give 
<a href="https://nixos.org/">nix</a> a try. I'm still doing it the old-fashioned way right
now: with a <code>Dockerfile</code>, running <code>cargo</code> in a &quot;builder&quot; image, copying stuff
out of there into a slimmer image (that still has an Ubuntu base, even though
<a href="https://github.com/GoogleContainerTools/distroless">distroless images</a> are a
thing now).</p>

                        <h2>
                            <a id="but-why" class="anchor" href="#but-why">
                                But why?
                            </a>
                        </h2>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Deploying at the edge]]></title>
        <id>https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-4</id>
        <link href="https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-4"/>
        <updated>2022-11-15T19:30:04.000Z</updated>
        <summary type="html"><![CDATA[<div class="disclosure">
	<strong>Disclosure</strong>: 
Although I no longer work for the company my website is hosted on, and this
article is written in way that mentions neither my previous or current hosting
provider: at the time of this writing, I don't pay for hosting.
</div>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Async fn in trait... not]]></title>
        <id>https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-3</id>
        <link href="https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-3"/>
        <updated>2022-11-15T19:30:03.000Z</updated>
        <summary type="html"><![CDATA[<h2>
                            <a id="async-fn-in-trait-not" class="anchor" href="#async-fn-in-trait-not">
                                Async fn in trait... not
                            </a>
                        </h2>
                        
<p>I was planning on showing the in-progress <code>async_fn_in_trait</code> feature in the
context of my website, but it turns out, I can't!</p>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Migrating from warp to axum]]></title>
        <id>https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-2</id>
        <link href="https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-2"/>
        <updated>2022-11-15T19:30:02.000Z</updated>
        <summary type="html"><![CDATA[<h2>
                            <a id="falling-out-of-love-with-warp" class="anchor" href="#falling-out-of-love-with-warp">
                                Falling out of love with <code>warp</code>
                            </a>
                        </h2>
                        
<p>Back when I wrote this codebase, <a href="https://lib.rs/crates/warp">warp</a> was the best
/ only alternative for something relatively high-level on top of
<a href="https://lib.rs/crates/hyper">hyper</a>.</p>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Cleaning up and upgrading third-party crates]]></title>
        <id>https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-1</id>
        <link href="https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-1"/>
        <updated>2022-11-15T19:30:01.000Z</updated>
        <summary type="html"><![CDATA[<h2>
                            <a id="the-bleeding-edge-of-rustc-and-clippy" class="anchor" href="#the-bleeding-edge-of-rustc-and-clippy">
                                The bleeding edge of rustc and clippy
                            </a>
                        </h2>
                        
<p>Typically, you'd want a production application to use a stable version of Rust.
At the time of this writing, that's Rust 1.65.0, which stabilizes a bunch of
long-awaited features (GATs, let-else, MIR inlining, split debug info, etc.).</p>
<div class="tip">
<div class="tip-header">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><path d="M21.41 41.398c.148-1.787.337-3.572.574-5.351.369-2.772 4.393-11.308 5.624-12.882l.553-.706-1.344-.449a5.772 5.772 0 0 1-3.948-5.478 5.786 5.786 0 0 1 5.779-5.78 5.768 5.768 0 0 1 5.684 4.758l.249 1.396 1.231-.704a28.845 28.845 0 0 1 14.282-3.801c4.991 0 9.93 1.314 14.282 3.801l1.231.704.249-1.396a5.766 5.766 0 0 1 5.683-4.758 5.786 5.786 0 0 1 5.779 5.78 5.772 5.772 0 0 1-3.948 5.478l-1.344.449.552.705c1.911 2.44 2.55 2.541 3.563 5.599 1.422 4.293 2.923 7.964 2.923 12.61v49.875h2V41.373c0-6.519-2.008-12.717-5.819-18.005a7.768 7.768 0 0 0 4.072-6.836c0-4.29-3.49-7.78-7.779-7.78a7.766 7.766 0 0 0-7.3 5.1 30.834 30.834 0 0 0-14.146-3.45 30.834 30.834 0 0 0-14.146 3.45 7.766 7.766 0 0 0-7.301-5.1c-4.289 0-7.779 3.49-7.779 7.78a7.766 7.766 0 0 0 4.072 6.836c-6.681 9.271-5.976 21.037-5.992 32.034-.017 11.946.656 23.895.109 35.838l2.006-.001c.67 0-.17-33.831-.156-36.912.022-4.312.148-8.631.505-12.929z"/><path d="M73.854 31.271v-4.494c0-.971-.79-1.76-1.761-1.76H55.235c-.604 0-1.3.869-1.778 1.905-.015 0-.027-.008-.042-.008H46.789c-.02 0-.037.011-.057.011-.478-1.037-1.175-1.908-1.779-1.908H28.094c-.971 0-1.761.79-1.761 1.76v4.494c0 4.477 3.643 8.119 8.119 8.119h5.12c4.265 0 7.734-3.47 7.734-7.734v-2.091H52.878v2.091c0 4.265 3.47 7.734 7.734 7.734h5.121c4.479-.001 8.121-3.643 8.121-8.119zm-41.713 3.192a1.387 1.387 0 0 1-1.917-.442 1.392 1.392 0 0 1 .442-1.917l8.403-5.255a1.392 1.392 0 0 1 1.475 2.359l-8.403 5.255zm11.163-2.18l-5.75 3.597a.95.95 0 0 1-1.313-.302.952.952 0 0 1 .303-1.312l5.75-3.597a.953.953 0 0 1 1.01 1.614zm15.168 1.935a1.387 1.387 0 0 1-1.917-.442 1.392 1.392 0 0 1 .442-1.917l8.403-5.255a1.392 1.392 0 0 1 1.475 2.359l-8.403 5.255zm4.909 1.561a.953.953 0 0 1-.506-1.759l5.75-3.597a.952.952 0 1 1 1.01 1.614l-5.75 3.597a.942.942 0 0 1-.504.145z"/><path d="M59.705 45.232h-2c0 1.823-1.483 3.306-3.306 3.306s-3.306-1.483-3.306-3.306v-1.439h1.06a3.294 3.294 0 0 0 3.285-3.285v-.17c0-.259-.038-.508-.095-.749a3.291 3.291 0 0 0-2.665-2.482 3.243 3.243 0 0 0-.525-.053h-4.12c-.18 0-.353.025-.525.053a3.291 3.291 0 0 0-2.665 2.482 3.255 3.255 0 0 0-.095.749v.17a3.294 3.294 0 0 0 3.285 3.285h1.06v1.439a3.31 3.31 0 0 1-3.307 3.306 3.31 3.31 0 0 1-3.306-3.306h-2a5.312 5.312 0 0 0 5.306 5.306 5.293 5.293 0 0 0 4.306-2.229 5.294 5.294 0 0 0 4.306 2.229 5.313 5.313 0 0 0 5.307-5.306zM29.742 58.336a.703.703 0 0 0-1.406 0v5.368a.704.704 0 0 0 1.406 0v-5.368zM43.779 58.336a.703.703 0 0 0-1.406 0v5.368a.704.704 0 0 0 1.406 0v-5.368zM57.816 58.336a.703.703 0 0 0-1.407 0v5.368a.704.704 0 0 0 1.407 0v-5.368zM71.853 58.336a.704.704 0 0 0-1.407 0v5.368a.704.704 0 0 0 1.407 0v-5.368zM35.354 71.559v5.369a.703.703 0 0 0 1.406 0v-5.369a.703.703 0 0 0-1.406 0zM49.39 71.559v5.369a.704.704 0 0 0 1.407 0v-5.369a.703.703 0 0 0-1.407 0zM63.427 71.559v5.369a.704.704 0 0 0 1.407 0v-5.369a.703.703 0 0 0-1.407 0zM29.038 81.364a.703.703 0 0 0-.703.703v5.369a.703.703 0 0 0 1.406 0v-5.369a.703.703 0 0 0-.703-.703zM43.076 81.364a.703.703 0 0 0-.703.703v5.369a.703.703 0 0 0 1.406 0v-5.369a.705.705 0 0 0-.703-.703zM57.113 81.364a.704.704 0 0 0-.704.703v5.369a.704.704 0 0 0 1.407 0v-5.369a.705.705 0 0 0-.703-.703zM71.149 81.364a.703.703 0 0 0-.703.703v5.369a.703.703 0 0 0 1.407 0v-5.369a.705.705 0 0 0-.704-.703z"/></svg>
Cool bear's hot tip
</div>

</div>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Rust 1.65.0]]></title>
        <id>https://www.youtube.com/watch?v=iWpsIuinvBo</id>
        <link href="https://www.youtube.com/watch?v=iWpsIuinvBo"/>
        <updated>2022-11-14T16:45:00.000Z</updated>
        <author>
            <name>Let's Get Rusty</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[14 Nov 2022]]></title>
        <id>https://this-week-in-neovim.org/2022/Nov/14</id>
        <link href="https://this-week-in-neovim.org/2022/Nov/14"/>
        <updated>2022-11-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Neovim Core updates
Updates of Neovim itself, which are available on Neovim nightly.
Important: if you are a plugin author, you are strongly advised to follow the
#14090 breaking changes on master GitHub thread, as it contains
important breaking changes information.
Guides, tours, articles, etc.

            
            Multi-cursor in place renaming with preview
        
    

A Youtube video showing how to do a multi-cursor renaming with navigator with preview. It uses the LSP and preview the
renaming of the symbol.
Reddit
Youtube
New plugins

            
            nvim-laurel
        
    


A plugin written by @aileot that provides syntax sugar macros for Neovim. The macros are
developed with fennel-language-server, and tested with
vusted.
Reddit
GitHub

            
            nv…]]></summary>
        <author>
            <name>Dimitri 'phaazon' Sabadie &lt;dimitri.sabadie@gmail.com&gt;</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ActiveStorage direct upload subfolders - #rails]]></title>
        <id>http://til.hashrocket.com/posts/gorrgmnkdo-activestorage-direct-upload-subfolders</id>
        <link href="http://til.hashrocket.com/posts/gorrgmnkdo-activestorage-direct-upload-subfolders"/>
        <updated>2022-11-12T17:14:01.000Z</updated>
        <summary type="html"><![CDATA[This is not recommended, but cannot be helped

The only way to store attachments into subfolders is to monkey patch the direct uploads controller:
# config/initializer/direct_uploads_monkey_path.rb
Rails.application.config.to_prepare do
  class ActiveStorage::DirectUploadsController < ActiveStorage::BaseController
    def create
      key = "#{sub_dir}/#{user.id}/#{ActiveStorage::Blob.generate_unique_secure_token}"
      upload_attrs = {key:}.merge(blob_args)
      blob = ActiveStorage::Blob.create_before_direct_upload!(**upload_attrs)
      render json: direct_upload_json(blob)
    end

    private

    def user
      @user ||= User.enabled.find(session[:current_user_id])
    end

    def sub_dir
      if /cool-uploads/.match?(request.referer)
        "cool-uploads"
      elsif /company-settings/.match?(request.referer)
        "companies"
      else
        "uploads"
      end
    end
  end
end]]></summary>
        <author>
            <name>dillonhafer</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Phoenix component attr definition - #elixir]]></title>
        <id>http://til.hashrocket.com/posts/vmphqn8bnf-phoenix-component-attr-definition</id>
        <link href="http://til.hashrocket.com/posts/vmphqn8bnf-phoenix-component-attr-definition"/>
        <updated>2022-11-11T17:18:43.000Z</updated>
        <summary type="html"><![CDATA[Phoenix.Componentattr/3 function is awesome. It does compile time validations to all the places that are calling the component and also it comes with nice and useful options. For instance the default option:
attr :name, :string, default: "there"

def greet(assigns) do
  ~H"""
  
Hey <%= @name %>!

  """
end

That’s very useful. That would totally replace most usages of assign_new like I used to do:
def greet(assigns) do
  assigns = assign_new(assigns, :name, fn -> "there" end)

  ~H"""
  
Hey <%= @name %>!

  """
end

This way we can call:
<.greet />

And have this html generated:

Hey there!]]></summary>
        <author>
            <name>viniciusnegrisolo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[a solid start]]></title>
        <id>https://www.youtube.com/watch?v=DVWu2b7mvFg</id>
        <link href="https://www.youtube.com/watch?v=DVWu2b7mvFg"/>
        <updated>2022-11-11T16:56:04.000Z</updated>
        <author>
            <name>Fireship</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Rust Is Boring (Why Rust?) [RUST-13]]]></title>
        <id>https://www.youtube.com/watch?v=oY0XwMOSzq4</id>
        <link href="https://www.youtube.com/watch?v=oY0XwMOSzq4"/>
        <updated>2022-11-10T23:08:22.000Z</updated>
        <author>
            <name>No Boilerplate</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Group Json data by a key - #command-line]]></title>
        <id>http://til.hashrocket.com/posts/ifb0agjnvu-group-json-data-by-a-key</id>
        <link href="http://til.hashrocket.com/posts/ifb0agjnvu-group-json-data-by-a-key"/>
        <updated>2022-11-10T15:57:18.000Z</updated>
        <summary type="html"><![CDATA[jq. In ruby that’s very trivial, it’s just about using the group_by method like that:
[
  {name: "John", age: 35},
  {name: "Bob", age: 40},
  {name: "Wally", age: 35}
].group_by{|u| u[:age]}

# {
#   35=>[{:name=>"John", :age=>35}, {:name=>"Wally", :age=>35}],
#   40=>[{:name=>"Bob", :age=>40}]
# }

But using jq I had to break it down to a few steps. So let’s say that I have this json:
[
  {"name": "John", "age": 35},
  {"name": "Bob", "age": 40},
  {"name": "Wally", "age": 35}
]

The idea is that we’ll call the group_by(.age)[] function to return multiple groups, then I pipe it to create a map with the age as the key. Finally we’ll have these bunch of nodes not surounded by an array yet, so I am pipeing to a new jq command to add with slurp:
cat data.json |
  jq 'group_by(.age)[] | {(.[0].age | tostring): [.[] | .]}' |
  jq -s add;

# {
#   "35": [{"name": "John", "age": 35},{"name": "Wally", "age": 35}],
#   "40": [{"name": "Bob", "age": 40}]
# }]]></summary>
        <author>
            <name>viniciusnegrisolo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Find the last occurrence of an array value  - #ruby]]></title>
        <id>http://til.hashrocket.com/posts/tvijtubhlm-find-the-last-occurrence-of-an-array-value-</id>
        <link href="http://til.hashrocket.com/posts/tvijtubhlm-find-the-last-occurrence-of-an-array-value-"/>
        <updated>2022-11-10T14:28:13.000Z</updated>
        <summary type="html"><![CDATA[rindex method on an array to return the last index the value argument is stored at. For Example:
arr= ['b', 'a', 'a', 'a']
arr.rindex('a')
#=> 3
arr.rindex('b')
#=> 0]]></summary>
        <author>
            <name>jackrosa</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Json default value using jq - #command-line]]></title>
        <id>http://til.hashrocket.com/posts/qnlrkpadlt-json-default-value-using-jq</id>
        <link href="http://til.hashrocket.com/posts/qnlrkpadlt-json-default-value-using-jq"/>
        <updated>2022-11-09T21:50:14.000Z</updated>
        <summary type="html"><![CDATA[default value when getting a node in json using jq:
{
  "users": [
    {"name": "John"},
    {}
  ]
}
cat my.json | jq '[.users[] | .name // "my-default"]'
# [
#   "John",
#   "my-default"
# ]]]></summary>
        <author>
            <name>viniciusnegrisolo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Check a check-box field, from the keyboard. - #workflow]]></title>
        <id>http://til.hashrocket.com/posts/2emq0gz9xc-check-a-check-box-field-from-the-keyboard</id>
        <link href="http://til.hashrocket.com/posts/2emq0gz9xc-check-a-check-box-field-from-the-keyboard"/>
        <updated>2022-11-09T20:17:39.000Z</updated>
        <summary type="html"><![CDATA[Quick answer:Space Bar

Have you ever found yourself filling out fields in a form, tabbing over to each field as you fill them out, only to come across a dreaded, check-box field that painstakingly makes you reach all the way across your desk to the mouse, just to check this box?  

Well, your suffering is over. Simply press the space bar to toggle the check-box and be on your way.]]></summary>
        <author>
            <name>craighafer</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Is FAANG f**ked?]]></title>
        <id>https://www.youtube.com/watch?v=2pfcynxODJc</id>
        <link href="https://www.youtube.com/watch?v=2pfcynxODJc"/>
        <updated>2022-11-09T17:14:34.000Z</updated>
        <author>
            <name>Fireship</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[MUST know Rust database libraries]]></title>
        <id>https://www.youtube.com/watch?v=FW4oUXHly8c</id>
        <link href="https://www.youtube.com/watch?v=FW4oUXHly8c"/>
        <updated>2022-11-08T18:14:37.000Z</updated>
        <author>
            <name>Let's Get Rusty</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Run pending migrations from error page in Rails - #ruby]]></title>
        <id>http://til.hashrocket.com/posts/q1jzix9n87-run-pending-migrations-from-error-page-in-rails</id>
        <link href="http://til.hashrocket.com/posts/q1jzix9n87-run-pending-migrations-from-error-page-in-rails"/>
        <updated>2022-11-08T16:27:17.000Z</updated>
        <summary type="html"><![CDATA[ActionableError was added. With ActionableError we now have a hook that gives us the functionality to perform tasks from the Rails’ error page… like running the migration task that we’d normally run from CLI.]]></summary>
        <author>
            <name>mattpolito</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Quickly find module inclusion in Ruby - #ruby]]></title>
        <id>http://til.hashrocket.com/posts/uabpz5pzl5-quickly-find-module-inclusion-in-ruby</id>
        <link href="http://til.hashrocket.com/posts/uabpz5pzl5-quickly-find-module-inclusion-in-ruby"/>
        <updated>2022-11-08T15:06:55.000Z</updated>
        <summary type="html"><![CDATA[class Location < ActiveEnum::Base
  include WithLabel
end

Normally I would check for inclusion of something via a declarative method like:
Location.ancestors.include?(ActiveEnum::Base)
=> true

Location.ancestors.include?(String)
=> false

Location.included_modules.include?(WithLabel)
=> true

However it never occured to me that < is defined on Class and returns true if is a subclass of the requested module.

So we can do something like this now:
Location < ActiveEnum::Base
=> true

Location < String
=> nil

Location < WithLabel
=> true

Subtle difference is that the ‘falsey’ case returns nil instead of false.

Also the definition of this method states that it returns true if module is a subclass of other but I’ve found that it returns true for methods that are included as well. Take that as you will.]]></summary>
        <author>
            <name>mattpolito</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Finding Closure in Rust | Huon on the internet]]></title>
        <id>/reading/finding-closure-in-rust-huon-on-the-internet/</id>
        <link href="https://almo7aya.dev/reading/finding-closure-in-rust-huon-on-the-internet/"/>
        <updated>2022-11-07T21:12:00.000Z</updated>
        <summary type="html"><![CDATA[https://huonw.github.io/blog/2015/05/finding-closure-in-rust/]]></summary>
        <author>
            <name>almo7aya.dev</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[(2) Why does Rust not have a standard async runtime? : rust]]></title>
        <id>/reading/2-why-does-rust-not-have-a-standard-async-runtime-rust/</id>
        <link href="https://almo7aya.dev/reading/2-why-does-rust-not-have-a-standard-async-runtime-rust/"/>
        <updated>2022-11-07T20:15:00.000Z</updated>
        <summary type="html"><![CDATA[https://www.reddit.com/r/rust/comments/ui7ayd/comment/i7akj6d/?utm_source=share&utm_medium=web2x&context=3]]></summary>
        <author>
            <name>almo7aya.dev</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Why does Rust not have a standard async runtime? : reddit]]></title>
        <id>/reading/why-does-rust-not-have-a-standard-async-runtime-reddit/</id>
        <link href="https://almo7aya.dev/reading/why-does-rust-not-have-a-standard-async-runtime-reddit/"/>
        <updated>2022-11-07T20:15:00.000Z</updated>
        <summary type="html"><![CDATA[https://www.reddit.com/r/rust/comments/ui7ayd/comment/i7akj6d/?utm_source=share&utm_medium=web2x&context=3]]></summary>
        <author>
            <name>almo7aya.dev</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Select options with option groups - #rails]]></title>
        <id>http://til.hashrocket.com/posts/mqhybglcjw-select-options-with-option-groups</id>
        <link href="http://til.hashrocket.com/posts/mqhybglcjw-select-options-with-option-groups"/>
        <updated>2022-11-07T15:08:22.000Z</updated>
        <summary type="html"><![CDATA[ActionView::Helpers::FormOptionsHelper#grouped_options_for_select lets you pass in a nested array of strings, and returns a string of option tags wrapped with optgroup tags:

The first value serves as the optgroup label while the second value must be an array of options.
grouped_options = [
  ["North America",
    ["United States", "Canada"]],
  ["Europe",
    ["Denmark", "Germany", "France"]]
]

Next, simply call it from a form helper in the view, passing in your grouped options.
<%= f.select :location, grouped_options_for_select(grouped_options) %>

Voila! You should now have something like this:]]></summary>
        <author>
            <name>craighafer</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[7 Nov 2022]]></title>
        <id>https://this-week-in-neovim.org/2022/Nov/7</id>
        <link href="https://this-week-in-neovim.org/2022/Nov/7"/>
        <updated>2022-11-07T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Neovim Core updates
Updates of Neovim itself, which are available on Neovim nightly.
Important: if you are a plugin author, you are strongly advised to follow the
#14090 breaking changes on master GitHub thread, as it contains
important breaking changes information.
Neovim Plugin Community updates
Neovim is full of active plugins. This section is about the community and what is going on.
Need help

      
      legendary.nvim is requesting community feedback
    
  


🗺️ A legend for your keymaps, commands, and autocmds, with which-key.nvim integration
legendary.nvim will be introducing semantic versioning via git tags in order to safely allow for a large refactor/rewrite.
Feedback is requested to help make decisions during the rewrite.
If you are a legendary.nvim user, please provide fee…]]></summary>
        <author>
            <name>Dimitri 'phaazon' Sabadie &lt;dimitri.sabadie@gmail.com&gt;</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[string - Extract filename and extension in Bash - Stack Overflow]]></title>
        <id>/reading/string-extract-filename-and-extension-in-bash-stack-overflow/</id>
        <link href="https://almo7aya.dev/reading/string-extract-filename-and-extension-in-bash-stack-overflow/"/>
        <updated>2022-11-06T01:04:00.000Z</updated>
        <summary type="html"><![CDATA[https://stackoverflow.com/questions/965053/extract-filename-and-extension-in-bash]]></summary>
        <author>
            <name>almo7aya.dev</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Becoming fasterthanlime full-time]]></title>
        <id>https://fasterthanli.me/articles/becoming-fasterthanlime-full-time</id>
        <link href="https://fasterthanli.me/articles/becoming-fasterthanlime-full-time"/>
        <updated>2022-11-04T06:40:00.000Z</updated>
        <summary type="html"><![CDATA[<p>As of today, I am no longer employed by <a href="https://fly.io">fly.io</a>.</p>
<p>We're both very sad, and we've promised to stay friends and send postcards to
each other over winter break. (I'm excited, too —
<a href="https://dribbble.com/shots/15304391-Home-for-Fly-io">Annie</a> makes great
postcards)</p>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[B16f00t-whapa: WhatsApp Parser Toolset v1.59]]></title>
        <id>/reading/b16f00t-whapa-whatsapp-parser-toolset-v1.59/</id>
        <link href="https://almo7aya.dev/reading/b16f00t-whapa-whatsapp-parser-toolset-v1.59/"/>
        <updated>2022-11-03T22:02:00.000Z</updated>
        <summary type="html"><![CDATA[https://github.com/B16f00t/whapa]]></summary>
        <author>
            <name>almo7aya.dev</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Nim in 100 Seconds]]></title>
        <id>https://www.youtube.com/watch?v=WHyOHQ_GkNo</id>
        <link href="https://www.youtube.com/watch?v=WHyOHQ_GkNo"/>
        <updated>2022-11-03T14:44:07.000Z</updated>
        <author>
            <name>Fireship</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[AstroNvim-status.lua at main · AstroNvim-AstroNvim]]></title>
        <id>/reading/astronvim-status.lua-at-main-astronvim-astronvim/</id>
        <link href="https://almo7aya.dev/reading/astronvim-status.lua-at-main-astronvim-astronvim/"/>
        <updated>2022-11-03T11:55:00.000Z</updated>
        <summary type="html"><![CDATA[https://github.com/AstroNvim/AstroNvim/blob/main/lua/core/utils/status.lua#L459]]></summary>
        <author>
            <name>almo7aya.dev</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[nvim: fix treesitter highlighting after breaking change]]></title>
        <id>/reading/nvim-fix-treesitter-highlighting-after-breaking-change/</id>
        <link href="https://almo7aya.dev/reading/nvim-fix-treesitter-highlighting-after-breaking-change/"/>
        <updated>2022-11-02T08:47:00.000Z</updated>
        <summary type="html"><![CDATA[https://gist.github.com/jdrouhard/dccbb692e901d5e0a00a3a4c126079c6]]></summary>
        <author>
            <name>almo7aya.dev</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Execute CDP from a Capybara test  - #testing]]></title>
        <id>http://til.hashrocket.com/posts/wuz98lrv5n-execute-cdp-from-a-capybara-test-</id>
        <link href="http://til.hashrocket.com/posts/wuz98lrv5n-execute-cdp-from-a-capybara-test-"/>
        <updated>2022-11-01T18:48:46.000Z</updated>
        <summary type="html"><![CDATA[With capybara you can access the page’s driver by using page.driver. Next you can access the browser methods on the driver withpage.driver.browser, then the .execute_cdpmethod can be used to execute chrome devtools commands on your webdriver browser.  

In a capybara test, it could like: 
test_browser = page.driver.browser

coordinates = { latitude: 35.689487,
                longitude: 139.691706,
                accuracy: 100 }

test_browser.execute_cdp('Emulation.setGeolocationOverride', **coordinates)

This can be used to mock some client-side information such as user device metrics, geo-location, or even emulate slow CPUs 😳]]></summary>
        <author>
            <name>jackrosa</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Design System ROI Calculator]]></title>
        <id>https://bradfrost.com/blog/link/design-system-roi-calculator/</id>
        <link href="https://bradfrost.com/blog/link/design-system-roi-calculator/"/>
        <updated>2022-11-01T10:38:35.000Z</updated>
        <summary type="html"><![CDATA[This Design System ROI Calculator by Knapsack is fun. It&#8217;s often tough to quantify the benefits a design system provides, so things like this are helpful even as a conversation starter.]]></summary>
        <author>
            <name>Brad Frost</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The HTTP crash course nobody asked for]]></title>
        <id>/reading/the-http-crash-course-nobody-asked-for/</id>
        <link href="https://almo7aya.dev/reading/the-http-crash-course-nobody-asked-for/"/>
        <updated>2022-11-01T04:08:00.000Z</updated>
        <summary type="html"><![CDATA[https://fasterthanli.me/articles/the-http-crash-course-nobody-asked-for]]></summary>
        <author>
            <name>almo7aya.dev</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[When your JavaScript framework gets acquired]]></title>
        <id>https://www.youtube.com/watch?v=HleppfVh8jc</id>
        <link href="https://www.youtube.com/watch?v=HleppfVh8jc"/>
        <updated>2022-10-31T17:48:50.000Z</updated>
        <author>
            <name>Fireship</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[31 Oct 2022]]></title>
        <id>https://this-week-in-neovim.org/2022/Oct/31</id>
        <link href="https://this-week-in-neovim.org/2022/Oct/31"/>
        <updated>2022-10-31T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This Week In Neovim updates
Woh, a new section?! No, this is just an exceptional section that will spawn from time to time to provide you with some
information about https://this-week-in-neovim.org itself.
This TWiN #16 is a special weekly update, so I need to make a small announcement in your feed to ensure people read
this right away. I (@phaazon) took the time this week to update the Rust library I use to
parse the weekly updates (called twin). Next week, for TWiN #17, the contribution process changes a bit, following
the changes I introduced in twin-0.2. If you have already contributed to TWiN or plan to, then you will probably want
to read the following updated section on the
README. If not, jump directly to
the next section!
Neovim Core updates
Updates of Neovim itself, which are ava…]]></summary>
        <author>
            <name>Dimitri 'phaazon' Sabadie &lt;dimitri.sabadie@gmail.com&gt;</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[About]]></title>
        <id>/about/</id>
        <link href="https://almo7aya.dev/about/"/>
        <updated>2022-10-30T00:08:49.000Z</updated>
        <summary type="html"><![CDATA[Hello there! I’m Ali Almohaya aka almo7aya, I work as a senior web engineer @ anghami.]]></summary>
        <author>
            <name>almo7aya.dev</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Change Chrome's Timezone/Location - #workflow]]></title>
        <id>http://til.hashrocket.com/posts/jh5ohxujw5-how-to-change-chromes-timezonelocation</id>
        <link href="http://til.hashrocket.com/posts/jh5ohxujw5-how-to-change-chromes-timezonelocation"/>
        <updated>2022-10-28T20:20:01.000Z</updated>
        <summary type="html"><![CDATA[Open the chrome developer tools (⌘ + ⇧ + c)  

Click on the settings button that looks like:
    

Navigate to the more tools section and click on Sensors

Here you can choose from pre-existing locations or even add your own:
    


From the chrome dev tools use (⌘ + ⇧ + p) and enter Sensors to get there faster.]]></summary>
        <author>
            <name>jackrosa</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Another JS tool re-written in Rust…]]></title>
        <id>https://www.youtube.com/watch?v=mNTkTV81tHU</id>
        <link href="https://www.youtube.com/watch?v=mNTkTV81tHU"/>
        <updated>2022-10-27T14:20:51.000Z</updated>
        <author>
            <name>Let's Get Rusty</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Upgrade Heroku PostgreSQL - #command-line]]></title>
        <id>http://til.hashrocket.com/posts/kntknuntjg-upgrade-heroku-postgresql</id>
        <link href="http://til.hashrocket.com/posts/kntknuntjg-upgrade-heroku-postgresql"/>
        <updated>2022-10-27T13:48:03.000Z</updated>
        <summary type="html"><![CDATA[PostgreSQL bump in Heroku from 13.8 => 14.5 (the latest Heroku supports at this day). The process was very smooth and kind of quick for a 1GB database. Here’s the script we end up running:
# Change the following `basic` to the right plan for you
heroku addons:create heroku-postgresql:basic -r heroku-staging
heroku pg:wait -r heroku-staging
heroku pg:info -r heroku-staging
# Now grab the NEW and OLD URLS to change the following commands:

heroku maintenance:on -r heroku-staging
# It took less than 2 mins for a 1GB database
heroku pg:copy DATABASE_URL CHANGE_HERE_NEWCOLOR_URL -r heroku-staging
# It's usually fast, it depends on how long the app takes to reboot
heroku pg:promote CHANGE_HERE_NEWCOLOR_URL -r heroku-staging
heroku maintenance:off -r heroku-staging

heroku addons:destroy CHANGE_HERE_OLDCOLOR_URL -r heroku-staging]]></summary>
        <author>
            <name>viniciusnegrisolo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Next.js 13… this changes everything]]></title>
        <id>https://www.youtube.com/watch?v=_w0Ikk4JY7U</id>
        <link href="https://www.youtube.com/watch?v=_w0Ikk4JY7U"/>
        <updated>2022-10-26T17:01:30.000Z</updated>
        <author>
            <name>Fireship</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Is coding really dead? 6 trends that look bad]]></title>
        <id>https://www.youtube.com/watch?v=Zs9Tifup1Bc</id>
        <link href="https://www.youtube.com/watch?v=Zs9Tifup1Bc"/>
        <updated>2022-10-25T18:33:59.000Z</updated>
        <author>
            <name>Fireship</name>
        </author>
    </entry>
</feed>