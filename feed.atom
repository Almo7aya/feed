<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>urn:2022-12-05T00:21:57.166Z</id>
    <title>osmos::feed</title>
    <updated>2022-12-05T00:21:57.166Z</updated>
    <generator>osmosfeed 1.15.1</generator>
    <link rel="alternate" href="index.html"/>
    <entry>
        <title type="html"><![CDATA[Day 4 (Advent of Code 2022)]]></title>
        <id>https://fasterthanli.me/series/advent-of-code-2022/part-4</id>
        <link href="https://fasterthanli.me/series/advent-of-code-2022/part-4"/>
        <updated>2022-12-04T15:30:00.000Z</updated>
        <summary type="html"><![CDATA[<h2>
                            <a id="part-1" class="anchor" href="#part-1">
                                Part 1
                            </a>
                        </h2>
                        
<p>Let's tackle the <a href="https://adventofcode.com/2022/day/4">day 4 challenge</a>!</p>
<p>In this one, we get an input like this:</p>
<div class="code-block"><pre class="code-block-inner" data-lang="">2-4,6-8
2-3,4-5
5-7,7-9
2-8,3-7
6-6,4-6
2-6,4-8
</pre></div>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Day 3 (Advent of Code 2022)]]></title>
        <id>https://fasterthanli.me/series/advent-of-code-2022/part-3</id>
        <link href="https://fasterthanli.me/series/advent-of-code-2022/part-3"/>
        <updated>2022-12-03T09:50:00.000Z</updated>
        <summary type="html"><![CDATA[<h2>
                            <a id="part-1" class="anchor" href="#part-1">
                                Part 1
                            </a>
                        </h2>
                        
<p>I'm not sure where the <a href="https://adventofcode.com/2022/day/3">day 3 challenge</a> is
going, because the problem statement for the first part is kinda convoluted.</p>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Day 2 (Advent of Code 2022)]]></title>
        <id>https://fasterthanli.me/series/advent-of-code-2022/part-2</id>
        <link href="https://fasterthanli.me/series/advent-of-code-2022/part-2"/>
        <updated>2022-12-02T16:10:00.000Z</updated>
        <summary type="html"><![CDATA[<h2>
                            <a id="part-1" class="anchor" href="#part-1">
                                Part 1
                            </a>
                        </h2>
                        
<p>In the <a href="https://adventofcode.com/2022/day/2">day 2 challenge</a>, we're playing
Rock Papers Scissors.</p>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Day 1 (Advent of Code 2022)]]></title>
        <id>https://fasterthanli.me/series/advent-of-code-2022/part-1</id>
        <link href="https://fasterthanli.me/series/advent-of-code-2022/part-1"/>
        <updated>2022-12-02T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>Two years ago, I did part of <a href="/series/advent-of-code-2020">Advent of Code 2020</a>
using the <a href="https://www.rust-lang.org/">Rust</a> language. It was a lot of fun,
so let's try it again!</p>

                        <h2>
                            <a id="the-problem-statement" class="anchor" href="#the-problem-statement">
                                The problem statement
                            </a>
                        </h2>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Component testing in Storybook]]></title>
        <id>https://bradfrost.com/blog/link/component-testing-in-storybook/</id>
        <link href="https://bradfrost.com/blog/link/component-testing-in-storybook/"/>
        <updated>2022-12-02T15:47:27.000Z</updated>
        <summary type="html"><![CDATA[&#8220;Writing your component UI tests in Jest can feel a little like stabbing at your components with a blindfold on.&#8221;- Michael Chan This nails it. I used to think my stumbling over testing design system component libraries was a personal [&#8230;]]]></summary>
        <author>
            <name>Brad Frost</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[rust-anthology-master-list.md at master · brson-rust-anthology]]></title>
        <id>/reading/rust-anthology-master-list.md-at-master-brson-rust-anthology/</id>
        <link href="https://almo7aya.dev/reading/rust-anthology-master-list.md-at-master-brson-rust-anthology/"/>
        <updated>2022-12-02T02:37:00.000Z</updated>
        <summary type="html"><![CDATA[https://github.com/brson/rust-anthology/blob/master/master-list.md]]></summary>
        <author>
            <name>almo7aya.dev</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Major Rust feature finally here!]]></title>
        <id>https://www.youtube.com/watch?v=LRQP_Xwr0Wc</id>
        <link href="https://www.youtube.com/watch?v=LRQP_Xwr0Wc"/>
        <updated>2022-12-01T17:13:28.000Z</updated>
        <author>
            <name>Let's Get Rusty</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Splitting an enumerable into two groups - #ruby]]></title>
        <id>http://til.hashrocket.com/posts/pwqfrid0qm-splitting-an-enumerable-into-two-groups</id>
        <link href="http://til.hashrocket.com/posts/pwqfrid0qm-splitting-an-enumerable-into-two-groups"/>
        <updated>2022-12-01T14:49:18.000Z</updated>
        <summary type="html"><![CDATA[Enumerable#partition is a method that returns two arrays.  
numbers = [2, 95, 24, 27, 85, 4]

even, odd = numbers.partition { |num| num.even? }
=> [[2, 24, 4], [95, 27, 85]]

even
=> [2, 24, 4]

odd
=> [95, 27, 85]]]></summary>
        <author>
            <name>craighafer</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Encrypting database columns with Rails 7 - #rails]]></title>
        <id>http://til.hashrocket.com/posts/dbgjtybi0o-encrypting-database-columns-with-rails-7</id>
        <link href="http://til.hashrocket.com/posts/dbgjtybi0o-encrypting-database-columns-with-rails-7"/>
        <updated>2022-11-29T20:34:36.000Z</updated>
        <summary type="html"><![CDATA[bin/rails db:encryption:init, then copy the resulting keys to your app’s credentials.yml. Now in your model, you can tell Active Record to encrypt a column by using the encrypts which takes a db column name as an argument. For example:
class User < ApplicationRecord
  encrypts :super_secret_data
end

Active record will automatically decrypt the data upon retrieval. See more here.]]></summary>
        <author>
            <name>jackrosa</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[!important property - #html-css]]></title>
        <id>http://til.hashrocket.com/posts/ra8ufwtq2t-important-property</id>
        <link href="http://til.hashrocket.com/posts/ra8ufwtq2t-important-property"/>
        <updated>2022-11-29T19:47:54.000Z</updated>
        <summary type="html"><![CDATA[can add the !important property, to override all other rules.

Here is an example:
#id {
  background-color: blue;
}

.class {
  background-color: gray;
}

p {
  background-color: red !important;
}
<p>This is some text in a paragraph.</p>

<p class="class">This is some text in a paragraph.</p>

<p id="id">This is some text in a paragraph.</p>

In this case, all of these <p> tags will have a red background.]]></summary>
        <author>
            <name>craighafer</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Javascript private class functions - #javascript]]></title>
        <id>http://til.hashrocket.com/posts/t4onxiqdum-javascript-private-class-functions</id>
        <link href="http://til.hashrocket.com/posts/t4onxiqdum-javascript-private-class-functions"/>
        <updated>2022-11-29T18:14:03.000Z</updated>
        <summary type="html"><![CDATA[#.  Check this out:
class MyClass {
  myPublicFunc() {
    console.log("=> hey myPublicFunc");
    this.#myPrivateFunc();
  }

  #myPrivateFunc() {
    console.log("=> hey myPrivateFunc");
  }
}

const myClass = new MyClass();

myClass.myPublicFunc();
// => hey myPublicFunc
// => hey myPrivateFunc

myClass.#myPrivateFunc();
// Uncaught SyntaxError:
//   Private field '#myPrivateFunc' must be declared in an enclosing class

We can also use that trick to make static methods, fields or static fields as well.

Thanks Andrew Vogel for this tip 😁]]></summary>
        <author>
            <name>viniciusnegrisolo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[28 Nov 2022]]></title>
        <id>https://this-week-in-neovim.org/2022/Nov/28</id>
        <link href="https://this-week-in-neovim.org/2022/Nov/28"/>
        <updated>2022-11-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Neovim Core updates
Updates of Neovim itself, which are available on Neovim nightly.
Important: if you are a plugin author, you are strongly advised to follow the
#14090 breaking changes on master GitHub thread, as it contains
important breaking changes information.
tree-sitter-vimdoc#65 Code blocks inside vimdoc (`:h do)
can now be highlighted with a specific language.
If you are using nvim-treesitter, then run :TSUpdate help.
Neovim Plugin Community updates
Neovim is full of active plugins. This section is about the community and what is going on.
Need help

      
      Neovim built-in options survey needs your contribution
    
  


Survey to find out how people use Neovim built-in options
Have you ever wondered, which leader key people use the most? Is it default \, <Space>, ,, or som…]]></summary>
        <author>
            <name>Dimitri 'phaazon' Sabadie &lt;dimitri.sabadie@gmail.com&gt;</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Rust 2024...the year of everywhere?]]></title>
        <id>/reading/rust-2024...the-year-of-everywhere/</id>
        <link href="https://almo7aya.dev/reading/rust-2024...the-year-of-everywhere/"/>
        <updated>2022-11-27T01:04:00.000Z</updated>
        <summary type="html"><![CDATA[http://smallcultfollowing.com/babysteps/blog/2022/09/22/rust-2024-the-year-of-everywhere/]]></summary>
        <author>
            <name>almo7aya.dev</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Supabase in 100 Seconds]]></title>
        <id>https://www.youtube.com/watch?v=zBZgdTb-dns</id>
        <link href="https://www.youtube.com/watch?v=zBZgdTb-dns"/>
        <updated>2022-11-25T17:14:32.000Z</updated>
        <author>
            <name>Fireship</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[JavaScript for the Haters]]></title>
        <id>https://www.youtube.com/watch?v=aXOChLn5ZdQ</id>
        <link href="https://www.youtube.com/watch?v=aXOChLn5ZdQ"/>
        <updated>2022-11-24T16:00:11.000Z</updated>
        <author>
            <name>Fireship</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A new way of error handling in Rust]]></title>
        <id>https://www.youtube.com/watch?v=BgCXrf_SG2E</id>
        <link href="https://www.youtube.com/watch?v=BgCXrf_SG2E"/>
        <updated>2022-11-24T14:35:16.000Z</updated>
        <author>
            <name>Let's Get Rusty</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[You're Doing Agile Wrong (Agile isn't scrum)]]></title>
        <id>https://www.youtube.com/watch?v=9K20e7jlQPA</id>
        <link href="https://www.youtube.com/watch?v=9K20e7jlQPA"/>
        <updated>2022-11-24T13:44:02.000Z</updated>
        <author>
            <name>No Boilerplate</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Using 2 or More Textures]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-2-textures.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-2-textures.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to use 2 or more textures in WebGL]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Implementing DrawImage]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-2d-drawimage.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-2d-drawimage.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to implement canvas 2d's drawImage function in WebGL]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL 2D Matrices]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-2d-matrices.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-2d-matrices.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How matrix math works explained in simple easy to follow directions.]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Implementing A Matrix Stack]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-2d-matrix-stack.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-2d-matrix-stack.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to implement canvas 2d's translate/rotate/scale functions in WebGL]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL 2D Rotation]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-2d-rotation.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-2d-rotation.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to rotate in 2D]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL 2D Scale]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-2d-scale.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-2d-scale.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to scale in 2D]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL 2D Translation]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-2d-translation.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-2d-translation.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to translate in 2D]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL - Rasterization vs 3D libraries]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-2d-vs-3d-library.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-2d-vs-3d-library.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Why WebGL is not a 3D library and why it matters.]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL 3D - Cameras]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-3d-camera.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-3d-camera.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How cameras work in WebGL]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL 3D Geometry - Lathe]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-3d-geometry-lathe.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-3d-geometry-lathe.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to lathe a bezier curve.]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL 3D - Directional Lighting]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-3d-lighting-directional.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-3d-lighting-directional.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to implement directional lighting in WebGL]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL 3D - Normal Mapping]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-3d-lighting-normal-mapping.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-3d-lighting-normal-mapping.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to implement normal maps]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL 3D - Point Lighting]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-3d-lighting-point.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-3d-lighting-point.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to implement point lighting in WebGL]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL 3D - Spot Lighting]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-3d-lighting-spot.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-3d-lighting-spot.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to implement spot lights in WebGL]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL - Orthographic 3D]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-3d-orthographic.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-3d-orthographic.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to do 3D in WebGL starting with an orthographic projection.]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL 3D Perspective Correct Texture Mapping]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-3d-perspective-correct-texturemapping.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-3d-perspective-correct-texturemapping.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[What's special about W]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL 3D Perspective]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-3d-perspective.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-3d-perspective.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to display perspective in 3D in WebGL]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Textures]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-3d-textures.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-3d-textures.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How textures work in WebGL]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL and Alpha]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-and-alpha.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-and-alpha.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How alpha in WebGL is different than alpha in OpenGL]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL - Animation]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-animation.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-animation.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to do animation in WebGL]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Anti-Patterns]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-anti-patterns.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-anti-patterns.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[What not to do in WebGL, why not to do it, and what to do instead]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Attributes]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-attributes.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-attributes.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[What are attributes in WebGL?]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Boilerplate]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-boilerplate.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-boilerplate.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Some of the code you need for all WebGL programs]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL - Cross Origin Images]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-cors-permission.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-cors-permission.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Using images across domains]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Cross Platform Issues]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-cross-platform-issues.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-cross-platform-issues.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Things to be aware of when trying to make your WebGL app work everywhere.]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Cubemaps]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-cube-maps.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-cube-maps.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to use cubemaps in WebGL]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL 3D - Data Textures]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-data-textures.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-data-textures.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Supplying data to a texture.]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL - Drawing Multiple Things]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-drawing-multiple-things.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-drawing-multiple-things.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to draw multiple different kinds of things in WebGL]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Drawing Without Data]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-drawing-without-data.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-drawing-without-data.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Creative Coding - Drawing Without Data]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Environment Maps (reflections)]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-environment-maps.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-environment-maps.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to implement environment maps.]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Fog]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-fog.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-fog.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to implement fog]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Framebuffers]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-framebuffers.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-framebuffers.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[What are framebuffers in WebGL?]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Fundamentals]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-fundamentals.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-fundamentals.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Your first WebGL lesson starting with the fundamentals]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL GPGPU]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-gpgpu.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-gpgpu.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to do general computing with WebGL]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL How It Works]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-how-it-works.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-how-it-works.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[What WebGL is really doing under the hood]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Image Processing Continued]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-image-processing-continued.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-image-processing-continued.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to apply multiple image processing techniques to images in WebGL]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Image Processing]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-image-processing.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-image-processing.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to image process in WebGL]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Indexed Vertices]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-indexed-vertices.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-indexed-vertices.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to use gl.drawElements]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Optimization - Instanced Drawing]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-instanced-drawing.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-instanced-drawing.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Drawing Multiple Instances of the same Object]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL - Less Code, More Fun]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-less-code-more-fun.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-less-code-more-fun.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Ways to make programming WebGL less verbose]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Load Obj with Mtl]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-load-obj-w-mtl.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-load-obj-w-mtl.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to parse an .MTL file]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Load Obj]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-load-obj.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-load-obj.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to parse and display an .OBJ file]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Matrices vs Math Matrices]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-matrix-vs-math.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-matrix-vs-math.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[The difference between WebGL conventions and Math conventions.]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Multiple Views, Multiple Canvases]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-multiple-views.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-multiple-views.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Drawing multiple views]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Picking]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-picking.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-picking.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to pick things in WebGL]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Planar and Perspective Projection Mapping]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-planar-projection-mapping.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-planar-projection-mapping.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Projecting a texture as a plane]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Points, Lines, and Triangles]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-points-lines-triangles.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-points-lines-triangles.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Details on drawing Points, Lines, and Triangles]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Post Processing]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-post-processing.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-post-processing.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Post Processing]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Precision Issues]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-precision-issues.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-precision-issues.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Precision Issues in WebGL]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Pulling Vertices]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-pulling-vertices.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-pulling-vertices.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Using independent indices]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A simple way to show the load on the GPU's vertex and fragment processing?]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-a-simple-way-to-show-the-load-on-the-gpu-s-vertex-and-fragment-processing-.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-a-simple-way-to-show-the-load-on-the-gpu-s-vertex-and-fragment-processing-.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[A simple way to show the load on the GPU's vertex and fragment processing?]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Accessing textures by pixel coordinate in WebGL2]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-accessing-textures-by-pixel-coordinate-in-webgl2.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-accessing-textures-by-pixel-coordinate-in-webgl2.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Accessing textures by pixel coordinate in WebGL2]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Apply a displacement map and specular map]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-apply-a-displacement-map-and-specular-map.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-apply-a-displacement-map-and-specular-map.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Apply a displacement map and specular map]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Can anyone explain what this GLSL fragment shader is doing?]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-can-anyone-explain-what-this-glsl-fragment-shader-is-doing-.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-can-anyone-explain-what-this-glsl-fragment-shader-is-doing-.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Can anyone explain what this GLSL fragment shader is doing?]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Can I mute the warning about vertex attrib 0 being disabled?]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-can-i-mute-the-warning-about-vertex-attrib-0-being-disabled-.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-can-i-mute-the-warning-about-vertex-attrib-0-being-disabled-.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Can I mute the warning about vertex attrib 0 being disabled?]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Create image warping effect in WebGL]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-create-image-warping-effect-in-webgl.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-create-image-warping-effect-in-webgl.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Create image warping effect in WebGL]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Creating a smudge/liquify effect]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-creating-a-smudge-liquify-effect.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-creating-a-smudge-liquify-effect.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Creating a smudge/liquify effect]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to draw Depth Sprites]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-depth-sprites.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-depth-sprites.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Drawing sprites that sort pixels by depth]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Determine min/max values for the entire image]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-determine-min-max-values-for-the-entire-image.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-determine-min-max-values-for-the-entire-image.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Determine min/max values for the entire image]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Don't blend a polygon that crosses itself]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-don-t-blend-a-polygon-that-crosses-itself.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-don-t-blend-a-polygon-that-crosses-itself.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Don't blend a polygon that crosses itself]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Drawing 2D image with depth map to achieve pseudo-3D effect]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-drawing-2d-image-with-depth-map-to-achieve-pseudo-3d-effect.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-drawing-2d-image-with-depth-map-to-achieve-pseudo-3d-effect.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Drawing 2D image with depth map to achieve pseudo-3D effect]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Drawing a heightmap]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-drawing-a-heightmap.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-drawing-a-heightmap.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Drawing a heightmap]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Drawing layers with different points]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-drawing-layers-with-different-points.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-drawing-layers-with-different-points.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Drawing layers with different points]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Drawing Many different models in a single draw call]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-drawing-many-different-models-in-a-single-draw-call.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-drawing-many-different-models-in-a-single-draw-call.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Drawing Many different models in a single draw call]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Drawing textured sprites with instanced drawing]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-drawing-textured-sprites-with-instanced-drawing.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-drawing-textured-sprites-with-instanced-drawing.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Drawing textured sprites with instanced drawing]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Efficient particle system in javascript? (WebGL)]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-efficient-particle-system-in-javascript---webgl-.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-efficient-particle-system-in-javascript---webgl-.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Efficient particle system in javascript? (WebGL)]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Emulating palette based graphics in WebGL]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-emulating-palette-based-graphics-in-webgl.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-emulating-palette-based-graphics-in-webgl.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Emulating palette based graphics in WebGL]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[FPS-like camera movement with basic matrix transformations]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-fps-like-camera-movement-with-basic-matrix-transformations.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-fps-like-camera-movement-with-basic-matrix-transformations.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[FPS-like camera movement with basic matrix transformations]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Get the size of a point for collision checking]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-get-the-size-of-a-point-for-collision-checking.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-get-the-size-of-a-point-for-collision-checking.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Get the size of a point for collision checking]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[GLSL shader to support coloring and texturing]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-glsl-shader-to-support-coloring-and-texturing.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-glsl-shader-to-support-coloring-and-texturing.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[GLSL shader to support coloring and texturing]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How can I compute for 500 points which of 1000 line segments is nearest to each point?]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-can-i-compute-for-500-points-which-of-1000-line-segments-is-nearest-to-each-point-.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-can-i-compute-for-500-points-which-of-1000-line-segments-is-nearest-to-each-point-.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How can I compute for 500 points which of 1000 line segments is nearest to each point?]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How can I create a 16bit historgram of 16bit data]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-can-i-create-a-16bit-historgram-of-16bit-data.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-can-i-create-a-16bit-historgram-of-16bit-data.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How can I create a 16bit historgram of 16bit data]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How can I get all the uniforms and uniformBlocks]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-can-i-get-all-the-uniforms-and-uniformblocks.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-can-i-get-all-the-uniforms-and-uniformblocks.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How can I get all the uniforms and uniformBlocks]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How can I move the perspective vanishing point from the center of the canvas?]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-can-i-move-the-perspective-vanishing-point-from-the-center-of-the-canvas-.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-can-i-move-the-perspective-vanishing-point-from-the-center-of-the-canvas-.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How can I move the perspective vanishing point from the center of the canvas?]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Achieve Moving Line with Trail Effects]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-achieve-moving-line-with-trail-effects.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-achieve-moving-line-with-trail-effects.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to Achieve Moving Line with Trail Effects]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to bind an array of textures to a WebGL shader uniform?]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-bind-an-array-of-textures-to-a-webgl-shader-uniform-.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-bind-an-array-of-textures-to-a-webgl-shader-uniform-.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to bind an array of textures to a WebGL shader uniform?]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to blend colors across 2 triangles]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-blend-colors-across-2-triangles.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-blend-colors-across-2-triangles.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to blend colors across 2 triangles]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to combine more text drawing into fewer draw calls]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-combine-more-text-drawing-into-fewer-draw-calls.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-combine-more-text-drawing-into-fewer-draw-calls.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to combine more text drawing into fewer draw calls]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to control the color between vertices]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-control-the-color-between-vertices.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-control-the-color-between-vertices.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to control the color between vertices]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to create a torus]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-create-a-torus.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-create-a-torus.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to create a torus]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to detect clipped triangles in the framgment shader]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-detect-clipped-triangles-in-the-framgment-shader.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-detect-clipped-triangles-in-the-framgment-shader.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to detect clipped triangles in the framgment shader]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to determine the average brightness in a scene?]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-determine-the-average-brightness-in-a-scene-.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-determine-the-average-brightness-in-a-scene-.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to determine the average brightness in a scene?]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to draw correctly textured trapezoid polygons]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-draw-correctly-textured-trapezoid-polygons.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-draw-correctly-textured-trapezoid-polygons.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to draw correctly textured trapezoid polygons]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to fade the drawing buffer]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-fade-the-drawing-buffer.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-fade-the-drawing-buffer.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to fade the drawing buffer]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to figure out how much GPU work to do without crashing WebGL]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-figure-out-how-much-gpu-work-to-do-without-crashing-webgl.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-figure-out-how-much-gpu-work-to-do-without-crashing-webgl.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to figure out how much GPU work to do without crashing WebGL]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to get audio data into a shader]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-get-audio-data-into-a-shader.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-get-audio-data-into-a-shader.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to get audio data into a shader]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to get code completion for WebGL in Visual Studio Code]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-get-code-completion-for-webgl-in-visual-studio-code.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-get-code-completion-for-webgl-in-visual-studio-code.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to get code completion for WebGL in Visual Studio Code]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to get pixelize effect in webgl?]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-get-pixelize-effect-in-webgl-.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-get-pixelize-effect-in-webgl-.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to get pixelize effect in webgl?]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to get the 3d coordinates of a mouse click]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-get-the-3d-coordinates-of-a-mouse-click.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-get-the-3d-coordinates-of-a-mouse-click.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to get the 3d coordinates of a mouse click]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to implement zoom from mouse in 2D WebGL]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-implement-zoom-from-mouse-in-2d-webgl.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-implement-zoom-from-mouse-in-2d-webgl.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to implement zoom from mouse in 2D WebGL]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to import a heightmap in WebGL]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-import-a-heightmap-in-webgl.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-import-a-heightmap-in-webgl.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to import a heightmap in WebGL]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to load images in the background with no jank]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-load-images-in-the-background-with-no-jank.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-load-images-in-the-background-with-no-jank.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to load images in the background with no jank]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to make a smudge brush tool]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-make-a-smudge-brush-tool.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-make-a-smudge-brush-tool.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to make a smudge brush tool]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to make WebGL canvas transparent]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-make-webgl-canvas-transparent.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-make-webgl-canvas-transparent.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to make WebGL canvas transparent]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to optimize rendering a UI]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-optimize-rendering-a-ui.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-optimize-rendering-a-ui.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to optimize rendering a UI]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to prevent texture bleeding with a texture atlas]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-prevent-texture-bleeding-with-a-texture-atlas.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-prevent-texture-bleeding-with-a-texture-atlas.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to prevent texture bleeding with a texture atlas]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to process particle positions]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-process-particle-positions.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-process-particle-positions.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to process particle positions]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to read a single component with readPixels]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-read-a-single-component-with-readpixels.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-read-a-single-component-with-readpixels.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to read a single component with readPixels]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to render large scale images like 32000x32000]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-render-large-scale-images-like-32000x32000.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-render-large-scale-images-like-32000x32000.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to render large scale images like 32000x32000]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to simulate a 3D texture in WebGL]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-simulate-a-3d-texture-in-webgl.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-simulate-a-3d-texture-in-webgl.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to simulate a 3D texture in WebGL]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to support both WebGL and WebGL2]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-support-both-webgl-and-webgl2.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-support-both-webgl-and-webgl2.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to support both WebGL and WebGL2]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to tell if an image has an alpha channel]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-tell-if-an-image-has-an-alpha-channel.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-tell-if-an-image-has-an-alpha-channel.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to tell if an image has an alpha channel]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to use a 2d sprite's transparency as a mask]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-use-a-2d-sprite-s-transparency-as-a-mask.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-use-a-2d-sprite-s-transparency-as-a-mask.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to use a 2d sprite's transparency as a mask]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to use texture, and color also in WebGL?]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-use-texture--and-color-also-in-webgl-.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-use-texture--and-color-also-in-webgl-.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to use texture, and color also in WebGL?]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to use textures as data]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-use-textures-as-data.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-use-textures-as-data.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to use textures as data]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to use the stencil buffer]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-use-the-stencil-buffer.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-use-the-stencil-buffer.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to use the stencil buffer]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to write a web-based music visualizer]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-write-a-web-based-music-visualizer.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-write-a-web-based-music-visualizer.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to write a web-based music visualizer]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[I get invalid type error when calling readPixels]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-i-get-invalid-type-error-when-calling-readpixels.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-i-get-invalid-type-error-when-calling-readpixels.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[I get invalid type error when calling readPixels]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Is it possible to measure rendering time in webgl using gl.finish()?]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-is-it-possible-to-measure-rendering-time-in-webgl-using-gl-finish---.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-is-it-possible-to-measure-rendering-time-in-webgl-using-gl-finish---.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Is it possible to measure rendering time in webgl using gl.finish()?]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Is there the notion of a generalized vertex and fragment shader?]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-is-there-the-notion-of-a-generalized-vertex-and-fragment-shader-.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-is-there-the-notion-of-a-generalized-vertex-and-fragment-shader-.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Is there the notion of a generalized vertex and fragment shader?]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Optimize drawing lots of large images]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-optimize-drawing-lots-of-large-images.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-optimize-drawing-lots-of-large-images.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Optimize drawing lots of large images]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Passing in per sprite alpha values when batching]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-passing-in-per-sprite-alpha-values-when-batching.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-passing-in-per-sprite-alpha-values-when-batching.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Passing in per sprite alpha values when batching]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pure WebGL Dashed Line]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-pure-webgl-dashed-line.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-pure-webgl-dashed-line.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Pure WebGL Dashed Line]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Recording FPS in WebGL]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-recording-fps-in-webgl.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-recording-fps-in-webgl.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Recording FPS in WebGL]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Rendering slowly over time]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-rendering-slowly-over-time.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-rendering-slowly-over-time.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Rendering slowly over time]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Setting the values of a struct array from JS to GLSL]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-setting-the-values-of-a-struct-array-from-js-to-glsl.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-setting-the-values-of-a-struct-array-from-js-to-glsl.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Setting the values of a struct array from JS to GLSL]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Show a night view vs a day view on a 3D Earth sphere]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-show-a-night-view-vs-a-day-view-on-a-3d-earth-sphere.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-show-a-night-view-vs-a-day-view-on-a-3d-earth-sphere.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Show a night view vs a day view on a 3D Earth sphere]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Sorting and optimizing instanced rendering]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-sorting-and-optimizing-instanced-rendering.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-sorting-and-optimizing-instanced-rendering.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Sorting and optimizing instanced rendering]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Tex image TEXTURE_2D level 0 is incurring lazy initialization]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-tex-image-texture_2d-level-0-is-incurring-lazy-initialization.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-tex-image-texture_2d-level-0-is-incurring-lazy-initialization.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Tex image TEXTURE_2D level 0 is incurring lazy initialization]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The fastest way to draw many circles]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-the-fastest-way-to-draw-many-circles.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-the-fastest-way-to-draw-many-circles.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[The fastest way to draw many circles]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL 2D tilemaps]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-webgl-2d-tilemaps.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-webgl-2d-tilemaps.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[WebGL 2D tilemaps]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Droste effect]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-webgl-droste-effect.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-webgl-droste-effect.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[WebGL Droste effect]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What is the local origin of a 3D model?]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-what-is-the-local-origin-of-a-3d-model-.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-what-is-the-local-origin-of-a-3d-model-.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[What is the local origin of a 3D model?]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[When to choose highp, mediump, lowp in shaders]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-when-to-choose-highp--mediump--lowp-in-shaders.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-when-to-choose-highp--mediump--lowp-in-shaders.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[When to choose highp, mediump, lowp in shaders]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Why does WebGL take more memory than Canvas 2D]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-why-does-webgl-take-more-memory-than-canvas-2d.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-why-does-webgl-take-more-memory-than-canvas-2d.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Why does WebGL take more memory than Canvas 2D]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Working around gl_PointSize limitations webGL]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-working-around-gl_pointsize-limitations-webgl.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-working-around-gl_pointsize-limitations-webgl.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Working around gl_PointSize limitations webGL]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Zooming to and stopping at object in a scene in WebGL]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna-zooming-to-and-stopping-at-object-in-a-scene-in-webgl.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna-zooming-to-and-stopping-at-object-in-a-scene-in-webgl.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Zooming to and stopping at object in a scene in WebGL]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Questions and Answers]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-qna.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-qna.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Random Questions and Answers]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Ramp Textures]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-ramp-textures.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-ramp-textures.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Using ramp textures]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL readPixels]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-readpixels.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-readpixels.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Details on readPixels]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[References]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-references.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-references.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Other References]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Rendering to a Texture]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-render-to-texture.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-render-to-texture.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to render to a texture.]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Resizing the Canvas.]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-resizing-the-canvas.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-resizing-the-canvas.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to resize a WebGL canvas and the issues involved]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL - Scene Graph]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-scene-graph.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-scene-graph.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[What a scene graph is want what it's used for]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Setup and Installation]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-setup-and-installation.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-setup-and-installation.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to do WebGL development]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Shaders and GLSL]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-shaders-and-glsl.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-shaders-and-glsl.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[What's a shader and what's GLSL]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Shadertoy]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-shadertoy.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-shadertoy.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Shadertoy shaders]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Shadows Continued]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-shadows-continued.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-shadows-continued.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to compute shadows continued]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Shadows]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-shadows.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-shadows.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to compute shadows]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Skinning]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-skinning.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-skinning.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to skin a mesh in WebGL]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL SkyBox]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-skybox.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-skybox.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Show the sky with a skybox!]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Smallest Programs]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-smallest-programs.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-smallest-programs.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Smallest Code for Testing]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Sprites]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-sprites.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-sprites.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to do sprites in WebGL]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL State Diagram]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-state-diagram.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-state-diagram.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[WebGL State Diagram]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Text - Canvas 2D]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-text-canvas2d.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-text-canvas2d.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to display text using a 2D canvas that is in sync with WebGL]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Text - Using a Glyph Texture]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-text-glyphs.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-text-glyphs.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to display text using a texture full of glyphs]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Text - HTML]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-text-html.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-text-html.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to use HTML to display text that is positioned to match WebGL]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Text - Textures]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-text-texture.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-text-texture.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Display Text in WebGL using Textures]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Texture Units]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-texture-units.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-texture-units.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[What are texture units in WebGL?]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Tips]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-tips.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-tips.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[Small issues that might trip you up with WebGL]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL Visualizing the Camera]]></title>
        <id>https://webglfundamentals.org/webgl/lessons/webgl-visualizing-the-camera.html</id>
        <link href="https://webglfundamentals.org/webgl/lessons/webgl-visualizing-the-camera.html"/>
        <updated>2022-11-24T08:31:55.000Z</updated>
        <summary type="html"><![CDATA[How to draw a camera frustum]]></summary>
        <author>
            <name>WebGL Fundamentals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Composite Primary Keys using Elixir Ecto - #elixir]]></title>
        <id>http://til.hashrocket.com/posts/lgagvwjnev-composite-primary-keys-using-elixir-ecto</id>
        <link href="http://til.hashrocket.com/posts/lgagvwjnev-composite-primary-keys-using-elixir-ecto"/>
        <updated>2022-11-23T17:51:07.000Z</updated>
        <summary type="html"><![CDATA[primary_key: true option for the Ecto.Schema.field/3 instead of dealing with the special module attr @primary_key. Check this out:
defmodule MyApp.OrderItem do
  use Ecto.Schema

  @primary_key false
  schema "order_items" do
    field :product_id, :integer, primary_key: true
    field :order_id, :integer, primary_key: true
    field :quantity, :integer
  end
end]]></summary>
        <author>
            <name>viniciusnegrisolo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Change Password of SSH key - #command-line]]></title>
        <id>http://til.hashrocket.com/posts/ihcswk7vhl-how-to-change-password-of-ssh-key</id>
        <link href="http://til.hashrocket.com/posts/ihcswk7vhl-how-to-change-password-of-ssh-key"/>
        <updated>2022-11-23T15:45:35.000Z</updated>
        <summary type="html"><![CDATA[ssh-keygen -p

From the man pages -
Requests changing the passphrase of a private key file instead of
creating a new private key.  The program will prompt for the file
containing the private key, for the old passphrase, and twice for
the new passphrase.
https://man.openbsd.org/ssh-keygen.1#p]]></summary>
        <author>
            <name>andrewvogel</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Wah Wah Watson with Herbie Hancock 1976 (live video) &#8211; Hang Up Your Hang Ups]]></title>
        <id>https://bradfrost.com/blog/link/wah-wah-watson-with-herbie-hancock-1976-live-video-hang-up-your-hang-ups/</id>
        <link href="https://bradfrost.com/blog/link/wah-wah-watson-with-herbie-hancock-1976-live-video-hang-up-your-hang-ups/"/>
        <updated>2022-11-22T15:59:40.000Z</updated>
        <summary type="html"><![CDATA[This is so badass. The control the band exhibits is absolutely incredible. It feels super organic, groovy, and even jammy, but it&#8217;s all totally locked in. When you feel like they&#8217;re just jamming over a groove, all of a sudden [&#8230;]]]></summary>
        <author>
            <name>Brad Frost</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[100+ JavaScript Concepts you Need to Know]]></title>
        <id>https://www.youtube.com/watch?v=lkIFF4maKMU</id>
        <link href="https://www.youtube.com/watch?v=lkIFF4maKMU"/>
        <updated>2022-11-22T15:04:57.000Z</updated>
        <author>
            <name>Fireship</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Renaming a Git Branch - #git]]></title>
        <id>http://til.hashrocket.com/posts/q3n1lwnfrz-renaming-a-git-branch</id>
        <link href="http://til.hashrocket.com/posts/q3n1lwnfrz-renaming-a-git-branch"/>
        <updated>2022-11-22T14:34:15.000Z</updated>
        <summary type="html"><![CDATA[git branch -m ‏‏‎<your-new-branch-name>

Git will create a reflog of the rename too.]]></summary>
        <author>
            <name>jackrosa</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[21 Nov 2022]]></title>
        <id>https://this-week-in-neovim.org/2022/Nov/21</id>
        <link href="https://this-week-in-neovim.org/2022/Nov/21"/>
        <updated>2022-11-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Neovim Core updates
Updates of Neovim itself, which are available on Neovim nightly.
Important: if you are a plugin author, you are strongly advised to follow the
#14090 breaking changes on master GitHub thread, as it contains
important breaking changes information.
#20956 vim.secure.read() and use it for 'exrc'
Add the vim.secure.read() function in Lua which prompts the user whether the given file is trusted or not. This
function is used to implement the 'exrc' feature. By explicitly asking the user whether or not a .nvimrc or
.exrc file is trusted (and only sourcing the file if so), the most trivial security issues with the 'exrc' options
are resolved and the function can be un-deprecated.
New plugins

      
    
    redostr.nvim
  

A new plugin providing an API to return the redo stri…]]></summary>
        <author>
            <name>Dimitri 'phaazon' Sabadie &lt;dimitri.sabadie@gmail.com&gt;</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Performant Mental Health]]></title>
        <id>https://bradfrost.com/blog/link/performant-mental-health/</id>
        <link href="https://bradfrost.com/blog/link/performant-mental-health/"/>
        <updated>2022-11-18T15:30:43.000Z</updated>
        <summary type="html"><![CDATA[I was talking to my friend Cameron Moll, and he discussed a series of articles about mental health that he, his wife, and a mental health nurse practitioner wrote. There&#8217;s some really fantastic information and advice in there, and I [&#8230;]]]></summary>
        <author>
            <name>Brad Frost</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A new operating system written in Rust]]></title>
        <id>https://www.youtube.com/watch?v=0O_VAEgJEcA</id>
        <link href="https://www.youtube.com/watch?v=0O_VAEgJEcA"/>
        <updated>2022-11-18T14:00:01.000Z</updated>
        <author>
            <name>Let's Get Rusty</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Layout &#038; Grid in Design Systems]]></title>
        <id>https://bradfrost.com/blog/post/layout-grid-in-design-systems/</id>
        <link href="https://bradfrost.com/blog/post/layout-grid-in-design-systems/"/>
        <updated>2022-11-17T17:07:49.000Z</updated>
        <summary type="html"><![CDATA[Simply saying the word &#8220;grid&#8221; conjures up strong and confusing feelings. Kinda like puberty! With so much history and so many different (and sometimes competing) paradigms, it&#8217;s no wonder conversations around layout and grid are so fraught, confusing, and contentious. [&#8230;]]]></summary>
        <author>
            <name>Brad Frost</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Destructuring Assignment in Javascript - #javascript]]></title>
        <id>http://til.hashrocket.com/posts/bmjzem5gvs-destructuring-assignment-in-javascript</id>
        <link href="http://til.hashrocket.com/posts/bmjzem5gvs-destructuring-assignment-in-javascript"/>
        <updated>2022-11-17T15:42:21.000Z</updated>
        <summary type="html"><![CDATA[// First we need an object to refer to
const pizza =  {
    crust: "thin", 
    topping: "pepperoni", 
    deliveryDriver: "Jack"
}

//Then we can use a destructuring assignment
const {crust} = pizza

console.log(crust)
// expected output: thin

Very handy
Read more here]]></summary>
        <author>
            <name>jackrosa</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Identity Primary Keys on Ecto - #elixir]]></title>
        <id>http://til.hashrocket.com/posts/gii7p8xmxr-identity-primary-keys-on-ecto</id>
        <link href="http://til.hashrocket.com/posts/gii7p8xmxr-identity-primary-keys-on-ecto"/>
        <updated>2022-11-16T19:12:02.000Z</updated>
        <summary type="html"><![CDATA[:identity to be used since 3.5 which is cool:
create table(:user, primary_key: false) do
  add :id, :identity, primary_key: true
  add :name, :string, null: false

  timestamps()
end

That generates this SQL:
CREATE TABLE public.users (
    id bigint NOT NULL,
    name character varying(255) NOT NULL,
    inserted_at timestamp(0) without time zone NOT NULL,
    updated_at timestamp(0) without time zone NOT NULL
);

ALTER TABLE public.users ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

The only issue is that there’s no option to change from BY DEFAULT to ALWAYS 😕]]></summary>
        <author>
            <name>viniciusnegrisolo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Find a function OID in Postgres - #sql]]></title>
        <id>http://til.hashrocket.com/posts/jwtkinrziy-find-a-function-oid-in-postgres</id>
        <link href="http://til.hashrocket.com/posts/jwtkinrziy-find-a-function-oid-in-postgres"/>
        <updated>2022-11-16T15:13:41.000Z</updated>
        <summary type="html"><![CDATA[pg_proc table:
select oid from pg_proc where proname ='my_function_name';

This is very useful if you need to find more info about a function but only know the function name.]]></summary>
        <author>
            <name>marylee</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Cut for time]]></title>
        <id>https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-8</id>
        <link href="https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-8"/>
        <updated>2022-11-15T19:30:08.000Z</updated>
        <summary type="html"><![CDATA[<p>This series has to end <em>somewhere</em>, so let's end it here!</p>
<p>However, here is a list of some things I'd like to come back to:</p>

                        <h2>
                            <a id="bundling-typescript" class="anchor" href="#bundling-typescript">
                                Bundling & TypeScript
                            </a>
                        </h2>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Async fn in trait, for real this time]]></title>
        <id>https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-7</id>
        <link href="https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-7"/>
        <updated>2022-11-15T19:30:07.000Z</updated>
        <summary type="html"><![CDATA[<h2>
                            <a id="async-trait-s-one-weird-type-ascription-trick" class="anchor" href="#async-trait-s-one-weird-type-ascription-trick">
                                <code>async_trait</code>'s one weird type ascription trick
                            </a>
                        </h2>
                        
<p>Now that I got <a href="part-6">the Log in with GitHub feature</a> working, let's explore
what this would've looked like with the <code>async_trait</code> crate.</p>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Implementing "Log in with GitHub"]]></title>
        <id>https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-6</id>
        <link href="https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-6"/>
        <updated>2022-11-15T19:30:06.000Z</updated>
        <summary type="html"><![CDATA[<p>Because I started accepting donations via <a href="/donate">GitHub Sponsors</a>, and
because donating at the &quot;Silver&quot; tier or above gives you advance access to
articles <em>and</em> your name in the credits, I need to interface with the GitHub
API the same way I do the Patreon API.</p>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Trying to use nix]]></title>
        <id>https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-5</id>
        <link href="https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-5"/>
        <updated>2022-11-15T19:30:05.000Z</updated>
        <summary type="html"><![CDATA[<p>Now that my website is <a href="part-4">deployed as a container image</a>, I wanted to give 
<a href="https://nixos.org/">nix</a> a try. I'm still doing it the old-fashioned way right
now: with a <code>Dockerfile</code>, running <code>cargo</code> in a &quot;builder&quot; image, copying stuff
out of there into a slimmer image (that still has an Ubuntu base, even though
<a href="https://github.com/GoogleContainerTools/distroless">distroless images</a> are a
thing now).</p>

                        <h2>
                            <a id="but-why" class="anchor" href="#but-why">
                                But why?
                            </a>
                        </h2>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Deploying at the edge]]></title>
        <id>https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-4</id>
        <link href="https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-4"/>
        <updated>2022-11-15T19:30:04.000Z</updated>
        <summary type="html"><![CDATA[<div class="disclosure">
	<strong>Disclosure</strong>: 
Although I no longer work for the company my website is hosted on, and this
article is written in way that mentions neither my previous or current hosting
provider: at the time of this writing, I don't pay for hosting.
</div>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Async fn in trait... not]]></title>
        <id>https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-3</id>
        <link href="https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-3"/>
        <updated>2022-11-15T19:30:03.000Z</updated>
        <summary type="html"><![CDATA[<h2>
                            <a id="async-fn-in-trait-not" class="anchor" href="#async-fn-in-trait-not">
                                Async fn in trait... not
                            </a>
                        </h2>
                        
<p>I was planning on showing the in-progress <code>async_fn_in_trait</code> feature in the
context of my website, but it turns out, I can't!</p>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Migrating from warp to axum]]></title>
        <id>https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-2</id>
        <link href="https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-2"/>
        <updated>2022-11-15T19:30:02.000Z</updated>
        <summary type="html"><![CDATA[<h2>
                            <a id="falling-out-of-love-with-warp" class="anchor" href="#falling-out-of-love-with-warp">
                                Falling out of love with <code>warp</code>
                            </a>
                        </h2>
                        
<p>Back when I wrote this codebase, <a href="https://lib.rs/crates/warp">warp</a> was the best
/ only alternative for something relatively high-level on top of
<a href="https://lib.rs/crates/hyper">hyper</a>.</p>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Cleaning up and upgrading third-party crates]]></title>
        <id>https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-1</id>
        <link href="https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-1"/>
        <updated>2022-11-15T19:30:01.000Z</updated>
        <summary type="html"><![CDATA[<h2>
                            <a id="the-bleeding-edge-of-rustc-and-clippy" class="anchor" href="#the-bleeding-edge-of-rustc-and-clippy">
                                The bleeding edge of rustc and clippy
                            </a>
                        </h2>
                        
<p>Typically, you'd want a production application to use a stable version of Rust.
At the time of this writing, that's Rust 1.65.0, which stabilizes a bunch of
long-awaited features (GATs, let-else, MIR inlining, split debug info, etc.).</p>
<div class="tip">
<div class="tip-header">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><path d="M21.41 41.398c.148-1.787.337-3.572.574-5.351.369-2.772 4.393-11.308 5.624-12.882l.553-.706-1.344-.449a5.772 5.772 0 0 1-3.948-5.478 5.786 5.786 0 0 1 5.779-5.78 5.768 5.768 0 0 1 5.684 4.758l.249 1.396 1.231-.704a28.845 28.845 0 0 1 14.282-3.801c4.991 0 9.93 1.314 14.282 3.801l1.231.704.249-1.396a5.766 5.766 0 0 1 5.683-4.758 5.786 5.786 0 0 1 5.779 5.78 5.772 5.772 0 0 1-3.948 5.478l-1.344.449.552.705c1.911 2.44 2.55 2.541 3.563 5.599 1.422 4.293 2.923 7.964 2.923 12.61v49.875h2V41.373c0-6.519-2.008-12.717-5.819-18.005a7.768 7.768 0 0 0 4.072-6.836c0-4.29-3.49-7.78-7.779-7.78a7.766 7.766 0 0 0-7.3 5.1 30.834 30.834 0 0 0-14.146-3.45 30.834 30.834 0 0 0-14.146 3.45 7.766 7.766 0 0 0-7.301-5.1c-4.289 0-7.779 3.49-7.779 7.78a7.766 7.766 0 0 0 4.072 6.836c-6.681 9.271-5.976 21.037-5.992 32.034-.017 11.946.656 23.895.109 35.838l2.006-.001c.67 0-.17-33.831-.156-36.912.022-4.312.148-8.631.505-12.929z"/><path d="M73.854 31.271v-4.494c0-.971-.79-1.76-1.761-1.76H55.235c-.604 0-1.3.869-1.778 1.905-.015 0-.027-.008-.042-.008H46.789c-.02 0-.037.011-.057.011-.478-1.037-1.175-1.908-1.779-1.908H28.094c-.971 0-1.761.79-1.761 1.76v4.494c0 4.477 3.643 8.119 8.119 8.119h5.12c4.265 0 7.734-3.47 7.734-7.734v-2.091H52.878v2.091c0 4.265 3.47 7.734 7.734 7.734h5.121c4.479-.001 8.121-3.643 8.121-8.119zm-41.713 3.192a1.387 1.387 0 0 1-1.917-.442 1.392 1.392 0 0 1 .442-1.917l8.403-5.255a1.392 1.392 0 0 1 1.475 2.359l-8.403 5.255zm11.163-2.18l-5.75 3.597a.95.95 0 0 1-1.313-.302.952.952 0 0 1 .303-1.312l5.75-3.597a.953.953 0 0 1 1.01 1.614zm15.168 1.935a1.387 1.387 0 0 1-1.917-.442 1.392 1.392 0 0 1 .442-1.917l8.403-5.255a1.392 1.392 0 0 1 1.475 2.359l-8.403 5.255zm4.909 1.561a.953.953 0 0 1-.506-1.759l5.75-3.597a.952.952 0 1 1 1.01 1.614l-5.75 3.597a.942.942 0 0 1-.504.145z"/><path d="M59.705 45.232h-2c0 1.823-1.483 3.306-3.306 3.306s-3.306-1.483-3.306-3.306v-1.439h1.06a3.294 3.294 0 0 0 3.285-3.285v-.17c0-.259-.038-.508-.095-.749a3.291 3.291 0 0 0-2.665-2.482 3.243 3.243 0 0 0-.525-.053h-4.12c-.18 0-.353.025-.525.053a3.291 3.291 0 0 0-2.665 2.482 3.255 3.255 0 0 0-.095.749v.17a3.294 3.294 0 0 0 3.285 3.285h1.06v1.439a3.31 3.31 0 0 1-3.307 3.306 3.31 3.31 0 0 1-3.306-3.306h-2a5.312 5.312 0 0 0 5.306 5.306 5.293 5.293 0 0 0 4.306-2.229 5.294 5.294 0 0 0 4.306 2.229 5.313 5.313 0 0 0 5.307-5.306zM29.742 58.336a.703.703 0 0 0-1.406 0v5.368a.704.704 0 0 0 1.406 0v-5.368zM43.779 58.336a.703.703 0 0 0-1.406 0v5.368a.704.704 0 0 0 1.406 0v-5.368zM57.816 58.336a.703.703 0 0 0-1.407 0v5.368a.704.704 0 0 0 1.407 0v-5.368zM71.853 58.336a.704.704 0 0 0-1.407 0v5.368a.704.704 0 0 0 1.407 0v-5.368zM35.354 71.559v5.369a.703.703 0 0 0 1.406 0v-5.369a.703.703 0 0 0-1.406 0zM49.39 71.559v5.369a.704.704 0 0 0 1.407 0v-5.369a.703.703 0 0 0-1.407 0zM63.427 71.559v5.369a.704.704 0 0 0 1.407 0v-5.369a.703.703 0 0 0-1.407 0zM29.038 81.364a.703.703 0 0 0-.703.703v5.369a.703.703 0 0 0 1.406 0v-5.369a.703.703 0 0 0-.703-.703zM43.076 81.364a.703.703 0 0 0-.703.703v5.369a.703.703 0 0 0 1.406 0v-5.369a.705.705 0 0 0-.703-.703zM57.113 81.364a.704.704 0 0 0-.704.703v5.369a.704.704 0 0 0 1.407 0v-5.369a.705.705 0 0 0-.703-.703zM71.149 81.364a.703.703 0 0 0-.703.703v5.369a.703.703 0 0 0 1.407 0v-5.369a.705.705 0 0 0-.704-.703z"/></svg>
Cool bear's hot tip
</div>

</div>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Rust 1.65.0]]></title>
        <id>https://www.youtube.com/watch?v=iWpsIuinvBo</id>
        <link href="https://www.youtube.com/watch?v=iWpsIuinvBo"/>
        <updated>2022-11-14T16:45:00.000Z</updated>
        <author>
            <name>Let's Get Rusty</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[14 Nov 2022]]></title>
        <id>https://this-week-in-neovim.org/2022/Nov/14</id>
        <link href="https://this-week-in-neovim.org/2022/Nov/14"/>
        <updated>2022-11-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Neovim Core updates
Updates of Neovim itself, which are available on Neovim nightly.
Important: if you are a plugin author, you are strongly advised to follow the
#14090 breaking changes on master GitHub thread, as it contains
important breaking changes information.
Guides, tours, articles, etc.

            
            Multi-cursor in place renaming with preview
        
    

A Youtube video showing how to do a multi-cursor renaming with navigator with preview. It uses the LSP and preview the
renaming of the symbol.
Reddit
Youtube
New plugins

            
            nvim-laurel
        
    


A plugin written by @aileot that provides syntax sugar macros for Neovim. The macros are
developed with fennel-language-server, and tested with
vusted.
Reddit
GitHub

            
            nv…]]></summary>
        <author>
            <name>Dimitri 'phaazon' Sabadie &lt;dimitri.sabadie@gmail.com&gt;</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ActiveStorage direct upload subfolders - #rails]]></title>
        <id>http://til.hashrocket.com/posts/gorrgmnkdo-activestorage-direct-upload-subfolders</id>
        <link href="http://til.hashrocket.com/posts/gorrgmnkdo-activestorage-direct-upload-subfolders"/>
        <updated>2022-11-12T17:14:01.000Z</updated>
        <summary type="html"><![CDATA[This is not recommended, but cannot be helped

The only way to store attachments into subfolders is to monkey patch the direct uploads controller:
# config/initializer/direct_uploads_monkey_path.rb
Rails.application.config.to_prepare do
  class ActiveStorage::DirectUploadsController < ActiveStorage::BaseController
    def create
      key = "#{sub_dir}/#{user.id}/#{ActiveStorage::Blob.generate_unique_secure_token}"
      upload_attrs = {key:}.merge(blob_args)
      blob = ActiveStorage::Blob.create_before_direct_upload!(**upload_attrs)
      render json: direct_upload_json(blob)
    end

    private

    def user
      @user ||= User.enabled.find(session[:current_user_id])
    end

    def sub_dir
      if /cool-uploads/.match?(request.referer)
        "cool-uploads"
      elsif /company-settings/.match?(request.referer)
        "companies"
      else
        "uploads"
      end
    end
  end
end]]></summary>
        <author>
            <name>dillonhafer</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Phoenix component attr definition - #elixir]]></title>
        <id>http://til.hashrocket.com/posts/vmphqn8bnf-phoenix-component-attr-definition</id>
        <link href="http://til.hashrocket.com/posts/vmphqn8bnf-phoenix-component-attr-definition"/>
        <updated>2022-11-11T17:18:43.000Z</updated>
        <summary type="html"><![CDATA[Phoenix.Componentattr/3 function is awesome. It does compile time validations to all the places that are calling the component and also it comes with nice and useful options. For instance the default option:
attr :name, :string, default: "there"

def greet(assigns) do
  ~H"""
  
Hey <%= @name %>!

  """
end

That’s very useful. That would totally replace most usages of assign_new like I used to do:
def greet(assigns) do
  assigns = assign_new(assigns, :name, fn -> "there" end)

  ~H"""
  
Hey <%= @name %>!

  """
end

This way we can call:
<.greet />

And have this html generated:

Hey there!]]></summary>
        <author>
            <name>viniciusnegrisolo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[a solid start]]></title>
        <id>https://www.youtube.com/watch?v=DVWu2b7mvFg</id>
        <link href="https://www.youtube.com/watch?v=DVWu2b7mvFg"/>
        <updated>2022-11-11T16:56:04.000Z</updated>
        <author>
            <name>Fireship</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Rust Is Boring (Why Rust?) [RUST-13]]]></title>
        <id>https://www.youtube.com/watch?v=oY0XwMOSzq4</id>
        <link href="https://www.youtube.com/watch?v=oY0XwMOSzq4"/>
        <updated>2022-11-10T23:08:22.000Z</updated>
        <author>
            <name>No Boilerplate</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Group Json data by a key - #command-line]]></title>
        <id>http://til.hashrocket.com/posts/ifb0agjnvu-group-json-data-by-a-key</id>
        <link href="http://til.hashrocket.com/posts/ifb0agjnvu-group-json-data-by-a-key"/>
        <updated>2022-11-10T15:57:18.000Z</updated>
        <summary type="html"><![CDATA[jq. In ruby that’s very trivial, it’s just about using the group_by method like that:
[
  {name: "John", age: 35},
  {name: "Bob", age: 40},
  {name: "Wally", age: 35}
].group_by{|u| u[:age]}

# {
#   35=>[{:name=>"John", :age=>35}, {:name=>"Wally", :age=>35}],
#   40=>[{:name=>"Bob", :age=>40}]
# }

But using jq I had to break it down to a few steps. So let’s say that I have this json:
[
  {"name": "John", "age": 35},
  {"name": "Bob", "age": 40},
  {"name": "Wally", "age": 35}
]

The idea is that we’ll call the group_by(.age)[] function to return multiple groups, then I pipe it to create a map with the age as the key. Finally we’ll have these bunch of nodes not surounded by an array yet, so I am pipeing to a new jq command to add with slurp:
cat data.json |
  jq 'group_by(.age)[] | {(.[0].age | tostring): [.[] | .]}' |
  jq -s add;

# {
#   "35": [{"name": "John", "age": 35},{"name": "Wally", "age": 35}],
#   "40": [{"name": "Bob", "age": 40}]
# }]]></summary>
        <author>
            <name>viniciusnegrisolo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Find the last occurrence of an array value  - #ruby]]></title>
        <id>http://til.hashrocket.com/posts/tvijtubhlm-find-the-last-occurrence-of-an-array-value-</id>
        <link href="http://til.hashrocket.com/posts/tvijtubhlm-find-the-last-occurrence-of-an-array-value-"/>
        <updated>2022-11-10T14:28:13.000Z</updated>
        <summary type="html"><![CDATA[rindex method on an array to return the last index the value argument is stored at. For Example:
arr= ['b', 'a', 'a', 'a']
arr.rindex('a')
#=> 3
arr.rindex('b')
#=> 0]]></summary>
        <author>
            <name>jackrosa</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Json default value using jq - #command-line]]></title>
        <id>http://til.hashrocket.com/posts/qnlrkpadlt-json-default-value-using-jq</id>
        <link href="http://til.hashrocket.com/posts/qnlrkpadlt-json-default-value-using-jq"/>
        <updated>2022-11-09T21:50:14.000Z</updated>
        <summary type="html"><![CDATA[default value when getting a node in json using jq:
{
  "users": [
    {"name": "John"},
    {}
  ]
}
cat my.json | jq '[.users[] | .name // "my-default"]'
# [
#   "John",
#   "my-default"
# ]]]></summary>
        <author>
            <name>viniciusnegrisolo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Check a check-box field, from the keyboard. - #workflow]]></title>
        <id>http://til.hashrocket.com/posts/2emq0gz9xc-check-a-check-box-field-from-the-keyboard</id>
        <link href="http://til.hashrocket.com/posts/2emq0gz9xc-check-a-check-box-field-from-the-keyboard"/>
        <updated>2022-11-09T20:17:39.000Z</updated>
        <summary type="html"><![CDATA[Quick answer:Space Bar

Have you ever found yourself filling out fields in a form, tabbing over to each field as you fill them out, only to come across a dreaded, check-box field that painstakingly makes you reach all the way across your desk to the mouse, just to check this box?  

Well, your suffering is over. Simply press the space bar to toggle the check-box and be on your way.]]></summary>
        <author>
            <name>craighafer</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Is FAANG f**ked?]]></title>
        <id>https://www.youtube.com/watch?v=2pfcynxODJc</id>
        <link href="https://www.youtube.com/watch?v=2pfcynxODJc"/>
        <updated>2022-11-09T17:14:34.000Z</updated>
        <author>
            <name>Fireship</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[MUST know Rust database libraries]]></title>
        <id>https://www.youtube.com/watch?v=FW4oUXHly8c</id>
        <link href="https://www.youtube.com/watch?v=FW4oUXHly8c"/>
        <updated>2022-11-08T18:14:37.000Z</updated>
        <author>
            <name>Let's Get Rusty</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Run pending migrations from error page in Rails - #ruby]]></title>
        <id>http://til.hashrocket.com/posts/q1jzix9n87-run-pending-migrations-from-error-page-in-rails</id>
        <link href="http://til.hashrocket.com/posts/q1jzix9n87-run-pending-migrations-from-error-page-in-rails"/>
        <updated>2022-11-08T16:27:17.000Z</updated>
        <summary type="html"><![CDATA[ActionableError was added. With ActionableError we now have a hook that gives us the functionality to perform tasks from the Rails’ error page… like running the migration task that we’d normally run from CLI.]]></summary>
        <author>
            <name>mattpolito</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Quickly find module inclusion in Ruby - #ruby]]></title>
        <id>http://til.hashrocket.com/posts/uabpz5pzl5-quickly-find-module-inclusion-in-ruby</id>
        <link href="http://til.hashrocket.com/posts/uabpz5pzl5-quickly-find-module-inclusion-in-ruby"/>
        <updated>2022-11-08T15:06:55.000Z</updated>
        <summary type="html"><![CDATA[class Location < ActiveEnum::Base
  include WithLabel
end

Normally I would check for inclusion of something via a declarative method like:
Location.ancestors.include?(ActiveEnum::Base)
=> true

Location.ancestors.include?(String)
=> false

Location.included_modules.include?(WithLabel)
=> true

However it never occured to me that < is defined on Class and returns true if is a subclass of the requested module.

So we can do something like this now:
Location < ActiveEnum::Base
=> true

Location < String
=> nil

Location < WithLabel
=> true

Subtle difference is that the ‘falsey’ case returns nil instead of false.

Also the definition of this method states that it returns true if module is a subclass of other but I’ve found that it returns true for methods that are included as well. Take that as you will.]]></summary>
        <author>
            <name>mattpolito</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Finding Closure in Rust | Huon on the internet]]></title>
        <id>/reading/finding-closure-in-rust-huon-on-the-internet/</id>
        <link href="https://almo7aya.dev/reading/finding-closure-in-rust-huon-on-the-internet/"/>
        <updated>2022-11-07T21:12:00.000Z</updated>
        <summary type="html"><![CDATA[https://huonw.github.io/blog/2015/05/finding-closure-in-rust/]]></summary>
        <author>
            <name>almo7aya.dev</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[(2) Why does Rust not have a standard async runtime? : rust]]></title>
        <id>/reading/2-why-does-rust-not-have-a-standard-async-runtime-rust/</id>
        <link href="https://almo7aya.dev/reading/2-why-does-rust-not-have-a-standard-async-runtime-rust/"/>
        <updated>2022-11-07T20:15:00.000Z</updated>
        <summary type="html"><![CDATA[https://www.reddit.com/r/rust/comments/ui7ayd/comment/i7akj6d/?utm_source=share&utm_medium=web2x&context=3]]></summary>
        <author>
            <name>almo7aya.dev</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Why does Rust not have a standard async runtime? : reddit]]></title>
        <id>/reading/why-does-rust-not-have-a-standard-async-runtime-reddit/</id>
        <link href="https://almo7aya.dev/reading/why-does-rust-not-have-a-standard-async-runtime-reddit/"/>
        <updated>2022-11-07T20:15:00.000Z</updated>
        <summary type="html"><![CDATA[https://www.reddit.com/r/rust/comments/ui7ayd/comment/i7akj6d/?utm_source=share&utm_medium=web2x&context=3]]></summary>
        <author>
            <name>almo7aya.dev</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Select options with option groups - #rails]]></title>
        <id>http://til.hashrocket.com/posts/mqhybglcjw-select-options-with-option-groups</id>
        <link href="http://til.hashrocket.com/posts/mqhybglcjw-select-options-with-option-groups"/>
        <updated>2022-11-07T15:08:22.000Z</updated>
        <summary type="html"><![CDATA[ActionView::Helpers::FormOptionsHelper#grouped_options_for_select lets you pass in a nested array of strings, and returns a string of option tags wrapped with optgroup tags:

The first value serves as the optgroup label while the second value must be an array of options.
grouped_options = [
  ["North America",
    ["United States", "Canada"]],
  ["Europe",
    ["Denmark", "Germany", "France"]]
]

Next, simply call it from a form helper in the view, passing in your grouped options.
<%= f.select :location, grouped_options_for_select(grouped_options) %>

Voila! You should now have something like this:]]></summary>
        <author>
            <name>craighafer</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[7 Nov 2022]]></title>
        <id>https://this-week-in-neovim.org/2022/Nov/7</id>
        <link href="https://this-week-in-neovim.org/2022/Nov/7"/>
        <updated>2022-11-07T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Neovim Core updates
Updates of Neovim itself, which are available on Neovim nightly.
Important: if you are a plugin author, you are strongly advised to follow the
#14090 breaking changes on master GitHub thread, as it contains
important breaking changes information.
Neovim Plugin Community updates
Neovim is full of active plugins. This section is about the community and what is going on.
Need help

      
      legendary.nvim is requesting community feedback
    
  


🗺️ A legend for your keymaps, commands, and autocmds, with which-key.nvim integration
legendary.nvim will be introducing semantic versioning via git tags in order to safely allow for a large refactor/rewrite.
Feedback is requested to help make decisions during the rewrite.
If you are a legendary.nvim user, please provide fee…]]></summary>
        <author>
            <name>Dimitri 'phaazon' Sabadie &lt;dimitri.sabadie@gmail.com&gt;</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[string - Extract filename and extension in Bash - Stack Overflow]]></title>
        <id>/reading/string-extract-filename-and-extension-in-bash-stack-overflow/</id>
        <link href="https://almo7aya.dev/reading/string-extract-filename-and-extension-in-bash-stack-overflow/"/>
        <updated>2022-11-06T01:04:00.000Z</updated>
        <summary type="html"><![CDATA[https://stackoverflow.com/questions/965053/extract-filename-and-extension-in-bash]]></summary>
        <author>
            <name>almo7aya.dev</name>
        </author>
    </entry>
</feed>